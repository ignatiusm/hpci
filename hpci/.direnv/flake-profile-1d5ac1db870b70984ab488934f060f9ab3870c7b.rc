unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
AR='ar'
export AR
AS='as'
export AS
BASH='/nix/store/s30jrpgav677fpc9yvkqsib70xfmx7xi-bash-5.2p26/bin/bash'
CC='clang'
export CC
CONFIG_SHELL='/nix/store/s30jrpgav677fpc9yvkqsib70xfmx7xi-bash-5.2p26/bin/bash'
export CONFIG_SHELL
CXX='clang++'
export CXX
HOSTTYPE='aarch64'
HOST_PATH='/nix/store/jwviw289hqx1sx9c6hqvw8v62jq7gssc-ghc-9.6.5/bin:/nix/store/jxkqd8ij99g44hmrinv2pkdw0va0fb7z-ghcid-0.8.9-bin/bin:/nix/store/ar3f3nskzk775ry2a788xmic7fdg8m1l-ormolu-0.7.2.0-bin/bin:/nix/store/877nqn3jqswwr86b522b8anh4fgpa8c5-hlint-3.6.1/bin:/nix/store/f32wqr0l0bidqjzhsmaq6xj17n29jssa-cpphs-1.20.9.1/bin:/nix/store/0rbpajfhpihqpiangy28mnrgqblbhk8z-hscolour-1.25/bin:/nix/store/6iryd0rr8kwwzligwgzx1xgz3sxhgfik-hoogle-5.0.18.4/bin:/nix/store/bybn3j18c9xn7394m8q37rdq9pv2zxfw-haskell-language-server-2.8.0.0/bin:/nix/store/7bbdgprdq1zg1bpkbwn1x7xn1324d90p-aeson-pretty-0.8.10/bin:/nix/store/4pnlwkicg6phlb1qr4r34i60yi83gh2s-apply-refact-0.13.0.0/bin:/nix/store/l5yqaaf03dzf02qyhnlygh6yv49qc3r1-floskell-0.11.1/bin:/nix/store/8y2bjwy0k0qrxdhygbdrggf7c3i0z8v9-fourmolu-0.14.0.0/bin:/nix/store/nx68n7fwxi1by93nhmgzi60kdafrq9b0-ghcide-2.8.0.0/bin:/nix/store/zy20a2q5vg457q5sxgbz198m73cqbjyf-constraints-extras-0.4.0.0/bin:/nix/store/x7ylirvpah99r9zrmhqyjg4li2gr3h1x-hie-bios-0.14.0/bin:/nix/store/3ndi2cllg6c15v54xizkh0irsl25y65f-hiedb-0.6.0.0/bin:/nix/store/2fjirq5816hp1p2kmd7fn1wq5xbdwric-lsp-types-2.1.1.0/bin:/nix/store/l1xzmzymjbdg92pd34ydghar4wrv14zg-implicit-hie-0.1.4.0/bin:/nix/store/a2nsqp58arrizhb3dvww5b5cslvxscih-retrie-1.2.3/bin:/nix/store/z3mg6w2knf12mg4sbn2f8g9xv0k0092l-stan-0.1.2.1/bin:/nix/store/y3giq85charpq28fm2rf676g133x0i81-extensions-0.1.0.1/bin:/nix/store/xrrcgsvln4b4mk4wi3s9x3lp822gjhhf-pretty-simple-4.1.2.0/bin:/nix/store/2rk3x3wy67c3d57mj407l9xgl5l9jgb0-stylish-haskell-0.14.5.0/bin:/nix/store/82nwa0js65vc7bcs0gb61zmmc9q8zk7x-stack/bin:/nix/store/hp55bn734323jdygbmsgj61zywzk70r4-hpack-0.36.0/bin:/nix/store/gaz6a2x92f412y7hqrc07ll169r9pkdf-mustache-2.4.2/bin:/nix/store/zyfdqva7svh1v456kchx16nr2s6v7qfr-open-browser-0.2.1.0/bin:/nix/store/pyb7cgxijngc17zcssapxhkwv3jzhwbh-pkg-config-wrapper-0.29.2/bin:/nix/store/ka3xjddzaplz4j9s8ccdvrrmx060pi06-openssl-3.0.13-bin/bin:/nix/store/47zwbmparr2g3b0hci44vma95k1j8a3v-coreutils-9.5/bin:/nix/store/dj4z6gimsxzlw0b4dnpcgv4b6wxijx13-findutils-4.9.0/bin:/nix/store/7cjp56110icrph79302pmvv980c6cxw1-diffutils-3.10/bin:/nix/store/qxhcgmw2va7wdqz551bg1wn2h0m5ggy4-gnused-4.9/bin:/nix/store/9rf817iskvk4m8bph69q01q5pqbzc551-gnugrep-3.11/bin:/nix/store/i6gxar94g2iiid6v54hlnz9pipp6p950-gawk-5.2.2/bin:/nix/store/vd6i09s9gbb6d9dgvcwkhd7h680laayv-gnutar-1.35/bin:/nix/store/dl9rjapvkcnypn01cvpbns1xxi4kp5qq-gzip-1.13/bin:/nix/store/26a0s1d6vlbpvg1x59q3jjgdg51i99kc-bzip2-1.0.8-bin/bin:/nix/store/qkkliqj6qhzlkchlkqc6n2iry22gi78q-gnumake-4.4.1/bin:/nix/store/s30jrpgav677fpc9yvkqsib70xfmx7xi-bash-5.2p26/bin:/nix/store/q0c9g6cywh0n40vapnl2f4s0bq4fkh59-patch-2.7.6/bin:/nix/store/q040nslh604a99yvk3qa1avgw5sgmzda-xz-5.4.6-bin/bin:/nix/store/xy7w9nykk7brvdp61d9qh42ci2r4v7rf-file-5.45/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LD='ld'
export LD
LD_DYLD_PATH='/usr/lib/dyld'
export LD_DYLD_PATH
LD_LIBRARY_PATH='/nix/store/jwviw289hqx1sx9c6hqvw8v62jq7gssc-ghc-9.6.5/lib:/nix/store/3hhyk0l6lbgcvz4lrqk5bsraxp1hp7cf-ghcid-0.8.9/lib:/nix/store/7z31kdvrl5r0jxpzidqsqrlywp8qdvxq-ormolu-0.7.2.0/lib:/nix/store/877nqn3jqswwr86b522b8anh4fgpa8c5-hlint-3.6.1/lib:/nix/store/6iryd0rr8kwwzligwgzx1xgz3sxhgfik-hoogle-5.0.18.4/lib:/nix/store/bybn3j18c9xn7394m8q37rdq9pv2zxfw-haskell-language-server-2.8.0.0/lib:/nix/store/l1xzmzymjbdg92pd34ydghar4wrv14zg-implicit-hie-0.1.4.0/lib:/nix/store/a2nsqp58arrizhb3dvww5b5cslvxscih-retrie-1.2.3/lib:/nix/store/82nwa0js65vc7bcs0gb61zmmc9q8zk7x-stack/lib:/nix/store/p6lh10p1i984zqfacn3kc9pn3nxsj44n-zlib-1.3.1/lib:/nix/store/pyb7cgxijngc17zcssapxhkwv3jzhwbh-pkg-config-wrapper-0.29.2/lib:/nix/store/n3nwhnbp4mfjxzjgk54z33zz828sn25w-libssh2-1.11.0/lib'
export LD_LIBRARY_PATH
LINENO='76'
MACHTYPE='aarch64-apple-darwin23.5.0'
MACOSX_DEPLOYMENT_TARGET='11.0'
export MACOSX_DEPLOYMENT_TARGET
NIX_BINTOOLS='/nix/store/q4ppvkmxsgq83xrpsxvq7d8pp7ldz8z7-cctools-binutils-darwin-wrapper-16.0.6-973.0.1'
export NIX_BINTOOLS
NIX_BINTOOLS_WRAPPER_TARGET_HOST_aarch64_apple_darwin='1'
export NIX_BINTOOLS_WRAPPER_TARGET_HOST_aarch64_apple_darwin
NIX_BUILD_CORES='10'
export NIX_BUILD_CORES
NIX_CC='/nix/store/9g8qxz6r8x7g01hkzy739m5j6bawk4d5-clang-wrapper-16.0.6'
export NIX_CC
NIX_CC_WRAPPER_TARGET_HOST_aarch64_apple_darwin='1'
export NIX_CC_WRAPPER_TARGET_HOST_aarch64_apple_darwin
NIX_CFLAGS_COMPILE=' -frandom-seed=b9zj79xd8n -isysroot /nix/store/7n8zp0cpbnf1rf7d3dc7gi0x43iadqn3-sdkroot-11.0/MacOSX11.0.sdk -isystem /nix/store/mhmq1fci2kw6jp6qjv9hnryx147d8zpr-libcxx-16.0.6-dev/include -isystem /nix/store/flagrdvds9knmjba8c4r9wqhj46s7xdb-compiler-rt-libc-16.0.6-dev/include -iframework /nix/store/pavmbwrmypfd7b37d4bil3jmj4387a02-apple-framework-Cocoa-11.0.0/Library/Frameworks -iframework /nix/store/9b2csk5qd492k63ph69l4rhvjcnz6zsv-apple-framework-AppKit-11.0.0/Library/Frameworks -iframework /nix/store/vjbi788hcrflipcbhyhg0kclnfg0vkvy-apple-framework-ApplicationServices-11.0.0/Library/Frameworks -iframework /nix/store/3ilg1maw04qjysdzwhgq56zkqfcy6n99-apple-framework-ColorSync-11.0.0/Library/Frameworks -iframework /nix/store/3vmj2nyi80kis2dgw7ik78ym569my0wp-apple-framework-CoreFoundation-11.0.0/Library/Frameworks -isystem /nix/store/5rzipngaarjfcjbgz6faqxay6sivvcc3-libobjc-11.0.0/include -iframework /nix/store/i2zn47spvyq9fds46gnmj3gg4nqvjmw5-apple-framework-CoreGraphics-11.0.0/Library/Frameworks -iframework /nix/store/03xbqzrdz7xfqgv80bhsqmlqjs953sib-apple-framework-IOKit-11.0.0/Library/Frameworks -iframework /nix/store/h8gw0zid3h18qvd3k8q9w0zgkcizpdv5-apple-framework-SystemConfiguration-11.0.0/Library/Frameworks -iframework /nix/store/qrapfbpvs9wlg5k92xscv7jakvcw3x4f-apple-framework-Security-11.0.0/Library/Frameworks -isystem /nix/store/c5s8xyp1dalyrvjy6b6b26mwkkyvb4ai-apple-lib-libDER/include -iframework /nix/store/6iagbd9lnvjamnjbhv808acvz6sp3ilk-apple-framework-CoreServices-11.0.0/Library/Frameworks -iframework /nix/store/k2k4iz9l7lgpgvp99dqwnl9d511jywbl-apple-framework-CFNetwork-11.0.0/Library/Frameworks -iframework /nix/store/wz3mwha4zffclwdzfikd7l44p3z71l9n-apple-framework-CoreAudio-11.0.0/Library/Frameworks -iframework /nix/store/dxc9qrdzq5vi0c7nwwwa18269120nagx-apple-framework-CoreAudioTypes-11.0.0/Library/Frameworks -iframework /nix/store/1br181x11b2n1ax5nyysbpzdrs04lwfp-apple-framework-DiskArbitration-11.0.0/Library/Frameworks -iframework /nix/store/p8zaqb9bv0diacxnj2ly575vss9ixrv6-apple-framework-NetFS-11.0.0/Library/Frameworks -iframework /nix/store/v9y3wi5df745fkzgb75hz7qpzybcbg7i-apple-framework-ServiceManagement-11.0.0/Library/Frameworks -iframework /nix/store/3qkryrkh6hf09vhhilsz86mi7d4h965q-apple-framework-CoreText-11.0.0/Library/Frameworks -iframework /nix/store/jr6jfc0vs7akq4n61gdmjhv24xb6rdh3-apple-framework-ImageIO-11.0.0/Library/Frameworks -iframework /nix/store/cy51z8828i9qlqn5iv5636970jfafx6v-apple-framework-AudioToolbox-11.0.0/Library/Frameworks -iframework /nix/store/cnzmsc150biajqf6njxjqdzvwg0qkr01-apple-private-framework-AudioToolboxCore-11.0.0/Library/Frameworks -iframework /nix/store/y4nwb7j26waw183sxwqxlvlv0pm1wv0g-apple-framework-Carbon-11.0.0/Library/Frameworks -iframework /nix/store/68vdvbx8c3zmap5si8xiif31rj695h63-apple-framework-Foundation-11.0.0/Library/Frameworks -iframework /nix/store/8gh4j6vq93xrgr7glv6y1cyzk5vra891-apple-framework-Combine-11.0.0/Library/Frameworks -iframework /nix/store/m8wvli36mmgc3n29zjdvj6y8cbss0gj6-apple-framework-QuartzCore-11.0.0/Library/Frameworks -iframework /nix/store/s72k8m5936vv0havs80ya4pv5pkm7z30-apple-framework-CoreImage-11.0.0/Library/Frameworks -iframework /nix/store/gwyigh4nxzgiy51h3v01w4jb3w7y6ix5-apple-framework-CoreVideo-11.0.0/Library/Frameworks -iframework /nix/store/rx4vw4xc8w4yglgfs7zpfnmajwyajnnp-apple-framework-IOSurface-11.0.0/Library/Frameworks -iframework /nix/store/jvaifpr9d22rmlnq4yhvc9n6ad1ni8ry-apple-framework-Metal-11.0.0/Library/Frameworks -iframework /nix/store/h3qsq7zzpisqd1ipav39f0847i4kj61l-apple-framework-OpenGL-11.0.0/Library/Frameworks -iframework /nix/store/krxl0bf2l2ahs0ccb7mvxwrzv18f5ylc-apple-framework-OpenCL-11.0.0/Library/Frameworks -iframework /nix/store/nvgjhingxfvrdsvv4xfw9yynmss2h46h-apple-framework-CoreMIDI-11.0.0/Library/Frameworks -iframework /nix/store/vhkg4whf1rpd76ddikkbszy7mgdp7323-apple-framework-AudioUnit-11.0.0/Library/Frameworks -iframework /nix/store/980hdpscg5d33dx5f9iwx0wwpvan4h7j-apple-framework-CloudKit-11.0.0/Library/Frameworks -iframework /nix/store/99h9wbv6ffi04wyr9xgjsm0d5g9cg36n-apple-framework-CoreLocation-11.0.0/Library/Frameworks -iframework /nix/store/pb6h8g5s1jwl388jrfb40hnw5s1gjivd-apple-framework-CoreData-11.0.0/Library/Frameworks -iframework /nix/store/zf9pg7afpbyqh7ipxdpbm0k2h6nc4lgh-apple-private-framework-UIFoundation-11.0.0/Library/Frameworks -isystem /nix/store/d9s89ja62dqfswka75rn7minwmn8xi4d-zlib-1.3.1-dev/include -isystem /nix/store/fc9h1nlx3iayfxak8l1v6aiakn1ffnv8-libssh2-1.11.0-dev/include -isystem /nix/store/r9dm9dhafnipff77yl4bv1ncjgh4afsi-openssl-3.0.13-dev/include -iframework /nix/store/9rgb0lr5i4vbizzhac5b6fk169n8mrkk-apple-framework-CoreFoundation-11.0.0/Library/Frameworks -isystem /nix/store/mhmq1fci2kw6jp6qjv9hnryx147d8zpr-libcxx-16.0.6-dev/include -isystem /nix/store/flagrdvds9knmjba8c4r9wqhj46s7xdb-compiler-rt-libc-16.0.6-dev/include -iframework /nix/store/pavmbwrmypfd7b37d4bil3jmj4387a02-apple-framework-Cocoa-11.0.0/Library/Frameworks -iframework /nix/store/9b2csk5qd492k63ph69l4rhvjcnz6zsv-apple-framework-AppKit-11.0.0/Library/Frameworks -iframework /nix/store/vjbi788hcrflipcbhyhg0kclnfg0vkvy-apple-framework-ApplicationServices-11.0.0/Library/Frameworks -iframework /nix/store/3ilg1maw04qjysdzwhgq56zkqfcy6n99-apple-framework-ColorSync-11.0.0/Library/Frameworks -iframework /nix/store/3vmj2nyi80kis2dgw7ik78ym569my0wp-apple-framework-CoreFoundation-11.0.0/Library/Frameworks -isystem /nix/store/5rzipngaarjfcjbgz6faqxay6sivvcc3-libobjc-11.0.0/include -iframework /nix/store/i2zn47spvyq9fds46gnmj3gg4nqvjmw5-apple-framework-CoreGraphics-11.0.0/Library/Frameworks -iframework /nix/store/03xbqzrdz7xfqgv80bhsqmlqjs953sib-apple-framework-IOKit-11.0.0/Library/Frameworks -iframework /nix/store/h8gw0zid3h18qvd3k8q9w0zgkcizpdv5-apple-framework-SystemConfiguration-11.0.0/Library/Frameworks -iframework /nix/store/qrapfbpvs9wlg5k92xscv7jakvcw3x4f-apple-framework-Security-11.0.0/Library/Frameworks -isystem /nix/store/c5s8xyp1dalyrvjy6b6b26mwkkyvb4ai-apple-lib-libDER/include -iframework /nix/store/6iagbd9lnvjamnjbhv808acvz6sp3ilk-apple-framework-CoreServices-11.0.0/Library/Frameworks -iframework /nix/store/k2k4iz9l7lgpgvp99dqwnl9d511jywbl-apple-framework-CFNetwork-11.0.0/Library/Frameworks -iframework /nix/store/wz3mwha4zffclwdzfikd7l44p3z71l9n-apple-framework-CoreAudio-11.0.0/Library/Frameworks -iframework /nix/store/dxc9qrdzq5vi0c7nwwwa18269120nagx-apple-framework-CoreAudioTypes-11.0.0/Library/Frameworks -iframework /nix/store/1br181x11b2n1ax5nyysbpzdrs04lwfp-apple-framework-DiskArbitration-11.0.0/Library/Frameworks -iframework /nix/store/p8zaqb9bv0diacxnj2ly575vss9ixrv6-apple-framework-NetFS-11.0.0/Library/Frameworks -iframework /nix/store/v9y3wi5df745fkzgb75hz7qpzybcbg7i-apple-framework-ServiceManagement-11.0.0/Library/Frameworks -iframework /nix/store/3qkryrkh6hf09vhhilsz86mi7d4h965q-apple-framework-CoreText-11.0.0/Library/Frameworks -iframework /nix/store/jr6jfc0vs7akq4n61gdmjhv24xb6rdh3-apple-framework-ImageIO-11.0.0/Library/Frameworks -iframework /nix/store/cy51z8828i9qlqn5iv5636970jfafx6v-apple-framework-AudioToolbox-11.0.0/Library/Frameworks -iframework /nix/store/cnzmsc150biajqf6njxjqdzvwg0qkr01-apple-private-framework-AudioToolboxCore-11.0.0/Library/Frameworks -iframework /nix/store/y4nwb7j26waw183sxwqxlvlv0pm1wv0g-apple-framework-Carbon-11.0.0/Library/Frameworks -iframework /nix/store/68vdvbx8c3zmap5si8xiif31rj695h63-apple-framework-Foundation-11.0.0/Library/Frameworks -iframework /nix/store/8gh4j6vq93xrgr7glv6y1cyzk5vra891-apple-framework-Combine-11.0.0/Library/Frameworks -iframework /nix/store/m8wvli36mmgc3n29zjdvj6y8cbss0gj6-apple-framework-QuartzCore-11.0.0/Library/Frameworks -iframework /nix/store/s72k8m5936vv0havs80ya4pv5pkm7z30-apple-framework-CoreImage-11.0.0/Library/Frameworks -iframework /nix/store/gwyigh4nxzgiy51h3v01w4jb3w7y6ix5-apple-framework-CoreVideo-11.0.0/Library/Frameworks -iframework /nix/store/rx4vw4xc8w4yglgfs7zpfnmajwyajnnp-apple-framework-IOSurface-11.0.0/Library/Frameworks -iframework /nix/store/jvaifpr9d22rmlnq4yhvc9n6ad1ni8ry-apple-framework-Metal-11.0.0/Library/Frameworks -iframework /nix/store/h3qsq7zzpisqd1ipav39f0847i4kj61l-apple-framework-OpenGL-11.0.0/Library/Frameworks -iframework /nix/store/krxl0bf2l2ahs0ccb7mvxwrzv18f5ylc-apple-framework-OpenCL-11.0.0/Library/Frameworks -iframework /nix/store/nvgjhingxfvrdsvv4xfw9yynmss2h46h-apple-framework-CoreMIDI-11.0.0/Library/Frameworks -iframework /nix/store/vhkg4whf1rpd76ddikkbszy7mgdp7323-apple-framework-AudioUnit-11.0.0/Library/Frameworks -iframework /nix/store/980hdpscg5d33dx5f9iwx0wwpvan4h7j-apple-framework-CloudKit-11.0.0/Library/Frameworks -iframework /nix/store/99h9wbv6ffi04wyr9xgjsm0d5g9cg36n-apple-framework-CoreLocation-11.0.0/Library/Frameworks -iframework /nix/store/pb6h8g5s1jwl388jrfb40hnw5s1gjivd-apple-framework-CoreData-11.0.0/Library/Frameworks -iframework /nix/store/zf9pg7afpbyqh7ipxdpbm0k2h6nc4lgh-apple-private-framework-UIFoundation-11.0.0/Library/Frameworks -isystem /nix/store/d9s89ja62dqfswka75rn7minwmn8xi4d-zlib-1.3.1-dev/include -isystem /nix/store/fc9h1nlx3iayfxak8l1v6aiakn1ffnv8-libssh2-1.11.0-dev/include -isystem /nix/store/r9dm9dhafnipff77yl4bv1ncjgh4afsi-openssl-3.0.13-dev/include -iframework /nix/store/9rgb0lr5i4vbizzhac5b6fk169n8mrkk-apple-framework-CoreFoundation-11.0.0/Library/Frameworks'
export NIX_CFLAGS_COMPILE
NIX_DONT_SET_RPATH='1'
export NIX_DONT_SET_RPATH
NIX_DONT_SET_RPATH_FOR_BUILD='1'
export NIX_DONT_SET_RPATH_FOR_BUILD
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_HARDENING_ENABLE='bindnow format fortify fortify3 pic relro stackprotector strictoverflow'
export NIX_HARDENING_ENABLE
NIX_IGNORE_LD_THROUGH_GCC='1'
export NIX_IGNORE_LD_THROUGH_GCC
NIX_LDFLAGS=' -L/nix/store/3ba5688fvifsfv844f711xyzv6kqh9mn-libcxx-16.0.6/lib -L/nix/store/50mr1scw08hh8camsc8yd594167m5sk6-compiler-rt-libc-16.0.6/lib -L/nix/store/5rzipngaarjfcjbgz6faqxay6sivvcc3-libobjc-11.0.0/lib -L/nix/store/p6lh10p1i984zqfacn3kc9pn3nxsj44n-zlib-1.3.1/lib -L/nix/store/bc10sl6fda9mb598n3gld2fwqr24zq7p-openssl-3.0.13/lib -L/nix/store/n3nwhnbp4mfjxzjgk54z33zz828sn25w-libssh2-1.11.0/lib -L/nix/store/s83f0jp0fvapgzla0acn4z4vav94jhsb-ncurses-6.4.20221231/lib -L/nix/store/gmsxk2dsyfiwz88qdb1plq5anicq1nzy-libffi-3.4.6/lib -L/nix/store/ym5m1jni1ngbx0vcgjmb1wxb92323ldw-gmp-with-cxx-6.3.0/lib -L/nix/store/0rsh55ighfv3fxidf3xz8vl3abiika0i-libiconv-99/lib -L/nix/store/3ba5688fvifsfv844f711xyzv6kqh9mn-libcxx-16.0.6/lib -L/nix/store/50mr1scw08hh8camsc8yd594167m5sk6-compiler-rt-libc-16.0.6/lib -L/nix/store/5rzipngaarjfcjbgz6faqxay6sivvcc3-libobjc-11.0.0/lib -L/nix/store/p6lh10p1i984zqfacn3kc9pn3nxsj44n-zlib-1.3.1/lib -L/nix/store/bc10sl6fda9mb598n3gld2fwqr24zq7p-openssl-3.0.13/lib -L/nix/store/n3nwhnbp4mfjxzjgk54z33zz828sn25w-libssh2-1.11.0/lib -L/nix/store/s83f0jp0fvapgzla0acn4z4vav94jhsb-ncurses-6.4.20221231/lib -L/nix/store/gmsxk2dsyfiwz88qdb1plq5anicq1nzy-libffi-3.4.6/lib -L/nix/store/ym5m1jni1ngbx0vcgjmb1wxb92323ldw-gmp-with-cxx-6.3.0/lib -L/nix/store/0rsh55ighfv3fxidf3xz8vl3abiika0i-libiconv-99/lib'
export NIX_LDFLAGS
NIX_NO_SELF_RPATH='1'
export NIX_NO_SELF_RPATH
NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_aarch64_apple_darwin='1'
export NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_aarch64_apple_darwin
NIX_STORE='/nix/store'
export NIX_STORE
NM='nm'
export NM
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='darwin23.5.0'
PATH='/nix/store/9g8qxz6r8x7g01hkzy739m5j6bawk4d5-clang-wrapper-16.0.6/bin:/nix/store/xhr7jq4wwh0xil8syxx8r3s20m222qp9-clang-16.0.6/bin:/nix/store/47zwbmparr2g3b0hci44vma95k1j8a3v-coreutils-9.5/bin:/nix/store/q4ppvkmxsgq83xrpsxvq7d8pp7ldz8z7-cctools-binutils-darwin-wrapper-16.0.6-973.0.1/bin:/nix/store/i6f0g5q8z8nnxiz1fi32kan4qzpgr4wv-cctools-binutils-darwin-16.0.6-973.0.1/bin:/nix/store/jwviw289hqx1sx9c6hqvw8v62jq7gssc-ghc-9.6.5/bin:/nix/store/jxkqd8ij99g44hmrinv2pkdw0va0fb7z-ghcid-0.8.9-bin/bin:/nix/store/ar3f3nskzk775ry2a788xmic7fdg8m1l-ormolu-0.7.2.0-bin/bin:/nix/store/877nqn3jqswwr86b522b8anh4fgpa8c5-hlint-3.6.1/bin:/nix/store/f32wqr0l0bidqjzhsmaq6xj17n29jssa-cpphs-1.20.9.1/bin:/nix/store/0rbpajfhpihqpiangy28mnrgqblbhk8z-hscolour-1.25/bin:/nix/store/6iryd0rr8kwwzligwgzx1xgz3sxhgfik-hoogle-5.0.18.4/bin:/nix/store/bybn3j18c9xn7394m8q37rdq9pv2zxfw-haskell-language-server-2.8.0.0/bin:/nix/store/7bbdgprdq1zg1bpkbwn1x7xn1324d90p-aeson-pretty-0.8.10/bin:/nix/store/4pnlwkicg6phlb1qr4r34i60yi83gh2s-apply-refact-0.13.0.0/bin:/nix/store/l5yqaaf03dzf02qyhnlygh6yv49qc3r1-floskell-0.11.1/bin:/nix/store/8y2bjwy0k0qrxdhygbdrggf7c3i0z8v9-fourmolu-0.14.0.0/bin:/nix/store/nx68n7fwxi1by93nhmgzi60kdafrq9b0-ghcide-2.8.0.0/bin:/nix/store/zy20a2q5vg457q5sxgbz198m73cqbjyf-constraints-extras-0.4.0.0/bin:/nix/store/x7ylirvpah99r9zrmhqyjg4li2gr3h1x-hie-bios-0.14.0/bin:/nix/store/3ndi2cllg6c15v54xizkh0irsl25y65f-hiedb-0.6.0.0/bin:/nix/store/2fjirq5816hp1p2kmd7fn1wq5xbdwric-lsp-types-2.1.1.0/bin:/nix/store/l1xzmzymjbdg92pd34ydghar4wrv14zg-implicit-hie-0.1.4.0/bin:/nix/store/a2nsqp58arrizhb3dvww5b5cslvxscih-retrie-1.2.3/bin:/nix/store/z3mg6w2knf12mg4sbn2f8g9xv0k0092l-stan-0.1.2.1/bin:/nix/store/y3giq85charpq28fm2rf676g133x0i81-extensions-0.1.0.1/bin:/nix/store/xrrcgsvln4b4mk4wi3s9x3lp822gjhhf-pretty-simple-4.1.2.0/bin:/nix/store/2rk3x3wy67c3d57mj407l9xgl5l9jgb0-stylish-haskell-0.14.5.0/bin:/nix/store/82nwa0js65vc7bcs0gb61zmmc9q8zk7x-stack/bin:/nix/store/hp55bn734323jdygbmsgj61zywzk70r4-hpack-0.36.0/bin:/nix/store/gaz6a2x92f412y7hqrc07ll169r9pkdf-mustache-2.4.2/bin:/nix/store/zyfdqva7svh1v456kchx16nr2s6v7qfr-open-browser-0.2.1.0/bin:/nix/store/pyb7cgxijngc17zcssapxhkwv3jzhwbh-pkg-config-wrapper-0.29.2/bin:/nix/store/ka3xjddzaplz4j9s8ccdvrrmx060pi06-openssl-3.0.13-bin/bin:/nix/store/s83f0jp0fvapgzla0acn4z4vav94jhsb-ncurses-6.4.20221231/bin:/nix/store/0rsh55ighfv3fxidf3xz8vl3abiika0i-libiconv-99/bin:/nix/store/47zwbmparr2g3b0hci44vma95k1j8a3v-coreutils-9.5/bin:/nix/store/dj4z6gimsxzlw0b4dnpcgv4b6wxijx13-findutils-4.9.0/bin:/nix/store/7cjp56110icrph79302pmvv980c6cxw1-diffutils-3.10/bin:/nix/store/qxhcgmw2va7wdqz551bg1wn2h0m5ggy4-gnused-4.9/bin:/nix/store/9rf817iskvk4m8bph69q01q5pqbzc551-gnugrep-3.11/bin:/nix/store/i6gxar94g2iiid6v54hlnz9pipp6p950-gawk-5.2.2/bin:/nix/store/vd6i09s9gbb6d9dgvcwkhd7h680laayv-gnutar-1.35/bin:/nix/store/dl9rjapvkcnypn01cvpbns1xxi4kp5qq-gzip-1.13/bin:/nix/store/26a0s1d6vlbpvg1x59q3jjgdg51i99kc-bzip2-1.0.8-bin/bin:/nix/store/qkkliqj6qhzlkchlkqc6n2iry22gi78q-gnumake-4.4.1/bin:/nix/store/s30jrpgav677fpc9yvkqsib70xfmx7xi-bash-5.2p26/bin:/nix/store/q0c9g6cywh0n40vapnl2f4s0bq4fkh59-patch-2.7.6/bin:/nix/store/q040nslh604a99yvk3qa1avgw5sgmzda-xz-5.4.6-bin/bin:/nix/store/xy7w9nykk7brvdp61d9qh42ci2r4v7rf-file-5.45/bin'
export PATH
PATH_LOCALE='/nix/store/aaspx7ivx2b09cl6aqrcm4m19f2c598x-adv_cmds-119-locale/share/locale'
export PATH_LOCALE
PKG_CONFIG_FOR_TARGET='pkg-config'
export PKG_CONFIG_FOR_TARGET
PKG_CONFIG_PATH_FOR_TARGET='/nix/store/d9s89ja62dqfswka75rn7minwmn8xi4d-zlib-1.3.1-dev/lib/pkgconfig:/nix/store/fc9h1nlx3iayfxak8l1v6aiakn1ffnv8-libssh2-1.11.0-dev/lib/pkgconfig:/nix/store/r9dm9dhafnipff77yl4bv1ncjgh4afsi-openssl-3.0.13-dev/lib/pkgconfig'
export PKG_CONFIG_PATH_FOR_TARGET
PS4='+ '
RANLIB='ranlib'
export RANLIB
SIZE='size'
export SIZE
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
STRINGS='strings'
export STRINGS
STRIP='strip'
export STRIP
XDG_DATA_DIRS=''
export XDG_DATA_DIRS
ZERO_AR_DATE='1'
export ZERO_AR_DATE
__darwinAllowLocalNetworking=''
export __darwinAllowLocalNetworking
__impureHostDeps='/bin/sh /usr/lib/libSystem.B.dylib /usr/lib/system/libunc.dylib /dev/zero /dev/random /dev/urandom /bin/sh'
export __impureHostDeps
__propagatedImpureHostDeps=''
export __propagatedImpureHostDeps
__propagatedSandboxProfile=''
export __propagatedSandboxProfile
__sandboxProfile=''
export __sandboxProfile
__structuredAttrs=''
export __structuredAttrs
_substituteStream_has_warned_replace_deprecation='false'
buildInputs='/nix/store/jwviw289hqx1sx9c6hqvw8v62jq7gssc-ghc-9.6.5 /nix/store/3hhyk0l6lbgcvz4lrqk5bsraxp1hp7cf-ghcid-0.8.9 /nix/store/7z31kdvrl5r0jxpzidqsqrlywp8qdvxq-ormolu-0.7.2.0 /nix/store/877nqn3jqswwr86b522b8anh4fgpa8c5-hlint-3.6.1 /nix/store/6iryd0rr8kwwzligwgzx1xgz3sxhgfik-hoogle-5.0.18.4 /nix/store/bybn3j18c9xn7394m8q37rdq9pv2zxfw-haskell-language-server-2.8.0.0 /nix/store/l1xzmzymjbdg92pd34ydghar4wrv14zg-implicit-hie-0.1.4.0 /nix/store/a2nsqp58arrizhb3dvww5b5cslvxscih-retrie-1.2.3 /nix/store/82nwa0js65vc7bcs0gb61zmmc9q8zk7x-stack /nix/store/d9s89ja62dqfswka75rn7minwmn8xi4d-zlib-1.3.1-dev /nix/store/pyb7cgxijngc17zcssapxhkwv3jzhwbh-pkg-config-wrapper-0.29.2 /nix/store/fc9h1nlx3iayfxak8l1v6aiakn1ffnv8-libssh2-1.11.0-dev'
export buildInputs
buildPhase='{ echo "------------------------------------------------------------";
  echo " WARNING: the existence of this path is not guaranteed.";
  echo " It is an internal implementation detail for pkgs.mkShell.";
  echo "------------------------------------------------------------";
  echo;
  # Record all build inputs as runtime dependencies
  export;
} >> "$out"
'
export buildPhase
builder='/nix/store/s30jrpgav677fpc9yvkqsib70xfmx7xi-bash-5.2p26/bin/bash'
export builder
cmakeFlags=''
export cmakeFlags
configureFlags=''
export configureFlags
defaultBuildInputs='/nix/store/9rgb0lr5i4vbizzhac5b6fk169n8mrkk-apple-framework-CoreFoundation-11.0.0'
defaultNativeBuildInputs='/nix/store/4wcl7yi1qdq1xd4nxqv8k5q4d9kyrkxg-update-autotools-gnu-config-scripts-hook /nix/store/7n8zp0cpbnf1rf7d3dc7gi0x43iadqn3-sdkroot-11.0 /nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh /nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh /nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh /nix/store/ilaf1w22bxi6jsi45alhmvvdgy4ly3zs-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh /nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh /nix/store/gps9qrh99j7g02840wv5x78ykmz30byp-strip.sh /nix/store/9g8qxz6r8x7g01hkzy739m5j6bawk4d5-clang-wrapper-16.0.6'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=()
declare -a envBuildHostHooks=()
declare -a envBuildTargetHooks=()
declare -a envHostHostHooks=('sdkRootHook' 'ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envHostTargetHooks=('sdkRootHook' 'ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envTargetTargetHooks=('pkgConfigWrapper_addPkgConfigPath' )
declare -a fixupOutputHooks=('if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_moveLib64' '_moveSbin' '_moveSystemdUserUnits' 'patchShebangsAuto' '_pruneLibtoolFiles' '_doStrip' )
guess='10'
initialPath='/nix/store/47zwbmparr2g3b0hci44vma95k1j8a3v-coreutils-9.5 /nix/store/dj4z6gimsxzlw0b4dnpcgv4b6wxijx13-findutils-4.9.0 /nix/store/7cjp56110icrph79302pmvv980c6cxw1-diffutils-3.10 /nix/store/qxhcgmw2va7wdqz551bg1wn2h0m5ggy4-gnused-4.9 /nix/store/9rf817iskvk4m8bph69q01q5pqbzc551-gnugrep-3.11 /nix/store/i6gxar94g2iiid6v54hlnz9pipp6p950-gawk-5.2.2 /nix/store/vd6i09s9gbb6d9dgvcwkhd7h680laayv-gnutar-1.35 /nix/store/dl9rjapvkcnypn01cvpbns1xxi4kp5qq-gzip-1.13 /nix/store/26a0s1d6vlbpvg1x59q3jjgdg51i99kc-bzip2-1.0.8-bin /nix/store/qkkliqj6qhzlkchlkqc6n2iry22gi78q-gnumake-4.4.1 /nix/store/s30jrpgav677fpc9yvkqsib70xfmx7xi-bash-5.2p26 /nix/store/q0c9g6cywh0n40vapnl2f4s0bq4fkh59-patch-2.7.6 /nix/store/q040nslh604a99yvk3qa1avgw5sgmzda-xz-5.4.6-bin /nix/store/xy7w9nykk7brvdp61d9qh42ci2r4v7rf-file-5.45'
mesonFlags=''
export mesonFlags
name='nix-shell-env'
export name
nativeBuildInputs=''
export nativeBuildInputs
out='/Users/iggy/projects/hpci/hpci/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='buildPhase'
export phases
pkg='/nix/store/9rgb0lr5i4vbizzhac5b6fk169n8mrkk-apple-framework-CoreFoundation-11.0.0'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/4wcl7yi1qdq1xd4nxqv8k5q4d9kyrkxg-update-autotools-gnu-config-scripts-hook' '/nix/store/7n8zp0cpbnf1rf7d3dc7gi0x43iadqn3-sdkroot-11.0' '/nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh' '/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh' '/nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh' '/nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh' '/nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh' '/nix/store/ilaf1w22bxi6jsi45alhmvvdgy4ly3zs-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh' '/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh' '/nix/store/gps9qrh99j7g02840wv5x78ykmz30byp-strip.sh' '/nix/store/9g8qxz6r8x7g01hkzy739m5j6bawk4d5-clang-wrapper-16.0.6' '/nix/store/q4ppvkmxsgq83xrpsxvq7d8pp7ldz8z7-cctools-binutils-darwin-wrapper-16.0.6-973.0.1' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=('/nix/store/mhmq1fci2kw6jp6qjv9hnryx147d8zpr-libcxx-16.0.6-dev' '/nix/store/3ba5688fvifsfv844f711xyzv6kqh9mn-libcxx-16.0.6' '/nix/store/flagrdvds9knmjba8c4r9wqhj46s7xdb-compiler-rt-libc-16.0.6-dev' '/nix/store/50mr1scw08hh8camsc8yd594167m5sk6-compiler-rt-libc-16.0.6' )
declare -a pkgsHostTarget=('/nix/store/jwviw289hqx1sx9c6hqvw8v62jq7gssc-ghc-9.6.5' '/nix/store/3hhyk0l6lbgcvz4lrqk5bsraxp1hp7cf-ghcid-0.8.9' '/nix/store/38q574hh461h63z05cbsm0l8r0lmzmwh-ansi-terminal-1.0.2' '/nix/store/rn7w0bnhqwlzflr3vbm512wmhyy0nxcv-ansi-terminal-types-0.11.5' '/nix/store/2pxm7mpn48ib8a9abv8saa9f498pdshk-colour-2.3.6' '/nix/store/2pxm7mpn48ib8a9abv8saa9f498pdshk-colour-2.3.6' '/nix/store/25iw6bvsb41r6xidwix0j4in8r3b5ir8-cmdargs-0.10.22' '/nix/store/m2q56xrf2ki104szsdbhikvavrv8wj7c-extra-1.7.16' '/nix/store/2ddk0fgk1l1cmhl67dpi51mm81v1mf0w-clock-0.8.4' '/nix/store/fhdk265qpr4d09kqwdf12d5c5ycbm5y9-fsnotify-0.4.1.0' '/nix/store/pavmbwrmypfd7b37d4bil3jmj4387a02-apple-framework-Cocoa-11.0.0' '/nix/store/9b2csk5qd492k63ph69l4rhvjcnz6zsv-apple-framework-AppKit-11.0.0' '/nix/store/vjbi788hcrflipcbhyhg0kclnfg0vkvy-apple-framework-ApplicationServices-11.0.0' '/nix/store/3ilg1maw04qjysdzwhgq56zkqfcy6n99-apple-framework-ColorSync-11.0.0' '/nix/store/3vmj2nyi80kis2dgw7ik78ym569my0wp-apple-framework-CoreFoundation-11.0.0' '/nix/store/5rzipngaarjfcjbgz6faqxay6sivvcc3-libobjc-11.0.0' '/nix/store/i2zn47spvyq9fds46gnmj3gg4nqvjmw5-apple-framework-CoreGraphics-11.0.0' '/nix/store/03xbqzrdz7xfqgv80bhsqmlqjs953sib-apple-framework-IOKit-11.0.0' '/nix/store/h8gw0zid3h18qvd3k8q9w0zgkcizpdv5-apple-framework-SystemConfiguration-11.0.0' '/nix/store/qrapfbpvs9wlg5k92xscv7jakvcw3x4f-apple-framework-Security-11.0.0' '/nix/store/c5s8xyp1dalyrvjy6b6b26mwkkyvb4ai-apple-lib-libDER' '/nix/store/6iagbd9lnvjamnjbhv808acvz6sp3ilk-apple-framework-CoreServices-11.0.0' '/nix/store/k2k4iz9l7lgpgvp99dqwnl9d511jywbl-apple-framework-CFNetwork-11.0.0' '/nix/store/wz3mwha4zffclwdzfikd7l44p3z71l9n-apple-framework-CoreAudio-11.0.0' '/nix/store/dxc9qrdzq5vi0c7nwwwa18269120nagx-apple-framework-CoreAudioTypes-11.0.0' '/nix/store/1br181x11b2n1ax5nyysbpzdrs04lwfp-apple-framework-DiskArbitration-11.0.0' '/nix/store/p8zaqb9bv0diacxnj2ly575vss9ixrv6-apple-framework-NetFS-11.0.0' '/nix/store/v9y3wi5df745fkzgb75hz7qpzybcbg7i-apple-framework-ServiceManagement-11.0.0' '/nix/store/3qkryrkh6hf09vhhilsz86mi7d4h965q-apple-framework-CoreText-11.0.0' '/nix/store/jr6jfc0vs7akq4n61gdmjhv24xb6rdh3-apple-framework-ImageIO-11.0.0' '/nix/store/cy51z8828i9qlqn5iv5636970jfafx6v-apple-framework-AudioToolbox-11.0.0' '/nix/store/cnzmsc150biajqf6njxjqdzvwg0qkr01-apple-private-framework-AudioToolboxCore-11.0.0' '/nix/store/y4nwb7j26waw183sxwqxlvlv0pm1wv0g-apple-framework-Carbon-11.0.0' '/nix/store/68vdvbx8c3zmap5si8xiif31rj695h63-apple-framework-Foundation-11.0.0' '/nix/store/8gh4j6vq93xrgr7glv6y1cyzk5vra891-apple-framework-Combine-11.0.0' '/nix/store/m8wvli36mmgc3n29zjdvj6y8cbss0gj6-apple-framework-QuartzCore-11.0.0' '/nix/store/s72k8m5936vv0havs80ya4pv5pkm7z30-apple-framework-CoreImage-11.0.0' '/nix/store/gwyigh4nxzgiy51h3v01w4jb3w7y6ix5-apple-framework-CoreVideo-11.0.0' '/nix/store/rx4vw4xc8w4yglgfs7zpfnmajwyajnnp-apple-framework-IOSurface-11.0.0' '/nix/store/jvaifpr9d22rmlnq4yhvc9n6ad1ni8ry-apple-framework-Metal-11.0.0' '/nix/store/h3qsq7zzpisqd1ipav39f0847i4kj61l-apple-framework-OpenGL-11.0.0' '/nix/store/h3qsq7zzpisqd1ipav39f0847i4kj61l-apple-framework-OpenGL-11.0.0' '/nix/store/krxl0bf2l2ahs0ccb7mvxwrzv18f5ylc-apple-framework-OpenCL-11.0.0' '/nix/store/nvgjhingxfvrdsvv4xfw9yynmss2h46h-apple-framework-CoreMIDI-11.0.0' '/nix/store/vhkg4whf1rpd76ddikkbszy7mgdp7323-apple-framework-AudioUnit-11.0.0' '/nix/store/980hdpscg5d33dx5f9iwx0wwpvan4h7j-apple-framework-CloudKit-11.0.0' '/nix/store/99h9wbv6ffi04wyr9xgjsm0d5g9cg36n-apple-framework-CoreLocation-11.0.0' '/nix/store/pb6h8g5s1jwl388jrfb40hnw5s1gjivd-apple-framework-CoreData-11.0.0' '/nix/store/zf9pg7afpbyqh7ipxdpbm0k2h6nc4lgh-apple-private-framework-UIFoundation-11.0.0' '/nix/store/9xg6vzb4s11a45xcp2s1cldhbzndyvm5-async-2.2.5' '/nix/store/lpgbv0aj5xjl4ca72cl9qjvsbslndqma-hashable-1.4.4.0' '/nix/store/wmybpvnhsd4z31dy469mk7zvs7zv2a6b-os-string-2.0.2.2' '/nix/store/p1wgpzakf88jj78hdcsgwxpcwhnnmg10-hfsevents-0.1.7' '/nix/store/x6ff9zfn2pa5a9n30xasn2hhs2pc8dip-cereal-0.5.8.3' '/nix/store/02bghbyh266nmqchnmxd4pfv9xwjs5qf-monad-control-1.0.3.1' '/nix/store/bsxs3a1li2j7xa2v33m3jsibsmgz3kja-transformers-base-0.4.6' '/nix/store/av37li0rd39ln9rfdzm9ipxn9r4f51ad-base-orphans-0.9.2' '/nix/store/frc4k9rgvqvp5dg1xzg7qaic6w61wqzi-transformers-compat-0.7.2' '/nix/store/frc4k9rgvqvp5dg1xzg7qaic6w61wqzi-transformers-compat-0.7.2' '/nix/store/yia2aa0v486plngna7pvv9m130rbkllx-safe-exceptions-0.1.7.4' '/nix/store/zlcys81am17j84fxsnrswi77z3jw867n-unix-compat-0.7.1' '/nix/store/vq4a39vp8gxhvwp6w7yfpc86bls9v1l6-terminal-size-0.3.4' '/nix/store/jxkqd8ij99g44hmrinv2pkdw0va0fb7z-ghcid-0.8.9-bin' '/nix/store/7z31kdvrl5r0jxpzidqsqrlywp8qdvxq-ormolu-0.7.2.0' '/nix/store/2cyyj62b5f88z1kxgj1b7abgsv6wlgxx-Diff-0.4.1' '/nix/store/qyffp6wngxaaswr0qlp4pismnk7vwmd2-file-embed-0.0.16.0' '/nix/store/mkih64gaxdjrza96z824fk1236vd0ppy-ghc-lib-parser-9.6.5.20240423' '/nix/store/1dljrqzs2ssnpcbklszqv1n2ajjnwj6s-megaparsec-9.5.0' '/nix/store/6zsqifgiakx9gf4dvkcyd9qsil1ix9pl-case-insensitive-1.2.1.0' '/nix/store/z8kn5jjx9dyb1x4qj3cnq675ms8iy4sm-parser-combinators-1.3.0' '/nix/store/f28n6qqacb1n5v8xlr66vfpjfrnhc57y-scientific-0.3.7.0' '/nix/store/m16982b148m7xsmb8fk88vddjckbc8z2-integer-logarithms-1.0.3.1' '/nix/store/4rr59mpad9bidv6yrry7svfvwlw7gi6a-primitive-0.8.0.0' '/nix/store/4clx0ckwav0hvq0v1s1492vrlyab9znn-MemoTrie-0.6.11' '/nix/store/yqvl7g1ymh664wzayrfxnvmk09llm5mp-newtype-generics-0.6.2' '/nix/store/9y6sp97sdksv7zl0pa1f3kxy27rj4xgk-syb-0.7.2.4' '/nix/store/3am3p4kzj8gfpf62491xsgl0msff0rff-optparse-applicative-0.18.1.0' '/nix/store/08pkfvk9r2fx1hi79674dl7pqyx0mq37-prettyprinter-1.7.1' '/nix/store/sl1nfvriqv434b0ah4x77ihjg3phqn7n-prettyprinter-ansi-terminal-1.1.3' '/nix/store/7zmyii6n5vza3cvfp7ynyacsyz0w1wi1-th-env-0.1.1' '/nix/store/hwp9swyslg5bl2nzvypn51kpgv3gbggd-th-compat-0.1.5' '/nix/store/ar3f3nskzk775ry2a788xmic7fdg8m1l-ormolu-0.7.2.0-bin' '/nix/store/877nqn3jqswwr86b522b8anh4fgpa8c5-hlint-3.6.1' '/nix/store/whn3mdya3jw0mqqms22bbw6f5hvzk70n-aeson-2.1.2.1' '/nix/store/qwhpfd48674n18g5kl2v0h0s6m3lrk2j-attoparsec-0.14.4' '/nix/store/9z9z7sz8jc6n325n2iphavg0j169scn8-base-compat-batteries-0.13.1' '/nix/store/l9cbsm6njxabmjk72n32gwirxpx0da74-base-compat-0.13.1' '/nix/store/sw6a76935jf6nc3dlk7q5dd0cgs1j3w8-data-fix-0.3.3' '/nix/store/7ynj2xhnpb7qzxrsfzfwhhw4cfn3sw59-dlist-1.0' '/nix/store/xr2z4a4gjrz02b4vjvw92g9sbnah353z-generically-0.1.1' '/nix/store/x84gl8f8rwcn1jk8y0agdq2550rsamn9-indexed-traversable-0.1.3' '/nix/store/2kniwnqmxsw41pxmazhqlishhjj81i3w-OneTuple-0.4.2' '/nix/store/p1qc6c1rilfrr3fk2k9cmla34a6wzjkk-QuickCheck-2.14.3' '/nix/store/byqpripjn9sd7aha2krwbpsqn5zjp2mf-random-1.2.1.2' '/nix/store/igshz6xnjy5m9vrj14f8axrmwzwkx4v1-splitmix-0.1.0.5' '/nix/store/igshz6xnjy5m9vrj14f8axrmwzwkx4v1-splitmix-0.1.0.5' '/nix/store/wb5pihjg34g6pkw3z31i0npcjnlhlwim-semialign-1.3' '/nix/store/74n861cq26ia9pv0jqds8ziqn1mm8w15-indexed-traversable-instances-0.1.1.2' '/nix/store/3z76mp2m1sjig45qz8xl6qw5b38jvma6-tagged-0.8.8' '/nix/store/1ydbv798w35sjd7hnq6jz408jxjqdxk9-unordered-containers-0.2.20' '/nix/store/xjnbh58i0vwl48jfalajcgxnn7n97wvc-vector-0.13.1.0' '/nix/store/x4l2kljn1nvls9ccbssv1sp19zfcjpfa-vector-stream-0.1.0.1' '/nix/store/0df21mvmrf00b1r3lnkyy9hgy4zczdh0-semigroupoids-6.0.1' '/nix/store/fb4s10g8p000aqn489kikx1li5774bji-bifunctors-5.6.2' '/nix/store/wdg880rqk88895w6s8djx8qhkkh4hx9b-assoc-1.1.1' '/nix/store/n6yaxnr11fk7p2fzj0ark5fzy2jqy8vz-comonad-5.0.8' '/nix/store/kp3j9jzlm01jrqrr617cmfqs44qwhvy2-distributive-0.6.2.1' '/nix/store/r00iyw7pdiacz62b8ry307amxk2w77df-th-abstraction-0.5.0.0' '/nix/store/2b3m3zrjjx78kysiwj7cmblzy6m8d7ng-contravariant-1.5.5' '/nix/store/dgnicykj6l38wcwhbk9f28kf7qbily8b-StateVar-1.2.2' '/nix/store/ax2haxbl2xgp19w3wyj46p2ns2xf7vpd-these-1.2' '/nix/store/11nr7w6dwqh1wh8r8fx1wffsp339immq-strict-0.5' '/nix/store/lzxhsi7fhkvxrskqlvrrybk0vsn9772g-text-short-0.1.6' '/nix/store/sbwg9mfj40ckbia35fxaxjlnv7mvdn1x-time-compat-1.9.6.1' '/nix/store/2d9dnw9kx3nzya2zcziii36azk59mwnx-uuid-types-1.0.5.1' '/nix/store/isxiwisvdb8cm7p7r3kwla1da93893wd-witherable-0.4.2' '/nix/store/f32wqr0l0bidqjzhsmaq6xj17n29jssa-cpphs-1.20.9.1' '/nix/store/paazyb48z47ywcyqv3sc4xj87ac5kbsm-polyparse-1.13' '/nix/store/paazyb48z47ywcyqv3sc4xj87ac5kbsm-polyparse-1.13' '/nix/store/p5b0gkx4mcwh7pwb8qxq6a04cqnjl0x3-data-default-0.7.1.1' '/nix/store/qvg44gasihagxh4lapjiqc5w412cnr7s-data-default-class-0.1.2.0' '/nix/store/jqbs1dxm0hipa09jmd672sdbd6amvyzb-data-default-instances-containers-0.0.1' '/nix/store/983fgc2n02jd951g62in253fpk0a5877-data-default-instances-dlist-0.0.1' '/nix/store/8vf3alr9ny4sz8ks7kjm3rd8frr6z051-data-default-instances-old-locale-0.0.1' '/nix/store/rwm20m7bd7h32r5cprvz8ch89f3yybbi-old-locale-1.0.0.7' '/nix/store/jjlbgr8jj9xg5zb2ax4hy292hdw38nh3-deriving-aeson-0.2.9' '/nix/store/0vj12a2kgv8ppmq913fib9k2f3vak6f7-filepattern-0.1.3' '/nix/store/0d7dh71ppi0ac4lpgjy6sn0j11hikmmp-ghc-lib-parser-ex-9.6.0.2' '/nix/store/rkz1caqclkmwhkcq38jpf1gas85xfa9l-uniplate-1.6.13' '/nix/store/0rbpajfhpihqpiangy28mnrgqblbhk8z-hscolour-1.25' '/nix/store/zrrn4c85gdbhsnzjlzxsq9v47rdf8ayb-refact-0.3.0.2' '/nix/store/9n6jbna4szkkax6wllhx1a0ib8kqbnzh-utf8-string-1.0.2' '/nix/store/d4hhkra5yn297jj5s35cbwhmmg5jmbg8-yaml-0.11.11.2' '/nix/store/4sqizdjmymfv0g931c7q1gxp9411b5aq-conduit-1.3.5' '/nix/store/87yb4mwv2pyzjwfr64wraj6gp62ywq5c-mono-traversable-1.0.17.0' '/nix/store/6asf16j2cp8b6w9c57iwnhxwwr7l0ggn-split-0.2.5' '/nix/store/i5g6vkhi4y2p2s6yk299ly1r42bmh1si-vector-algorithms-0.9.0.1' '/nix/store/j44plb6lv717pfnfw1344f8lhh87a6z4-bitvec-1.1.5.0' '/nix/store/a8ya87gkiqc5wkd6zbnbbmkczf1l0lrz-resourcet-1.3.0' '/nix/store/y3ycd99f2p8fdza1wb97wgy9gzv9c6j9-unliftio-core-0.2.1.0' '/nix/store/y3ycd99f2p8fdza1wb97wgy9gzv9c6j9-unliftio-core-0.2.1.0' '/nix/store/fvr3bp39ykg5ldnpphv7f03cqq12fr53-libyaml-0.1.4' '/nix/store/8lq2vqpmly43yimyv5pvyjvy1hgajjhm-libyaml-clib-0.2.5' '/nix/store/6iryd0rr8kwwzligwgzx1xgz3sxhgfik-hoogle-5.0.18.4' '/nix/store/avmfivifbcjmqwn5ny9wwrzkwpvw9wqj-blaze-html-0.9.2.0' '/nix/store/3djwvm3h8xn5d3a2p3qgmkgjvigs1v7m-blaze-builder-0.4.2.3' '/nix/store/ng8xrqij2xscmb73hhkp9qb4w4mysx3a-blaze-markup-0.8.3.0' '/nix/store/ng8xrqij2xscmb73hhkp9qb4w4mysx3a-blaze-markup-0.8.3.0' '/nix/store/26w97ylbnnzg7qn7clzxwicc1z37xybk-conduit-extra-1.3.6' '/nix/store/mrmig38dp8snwxp5lcm07wbbfwk91zfc-network-3.1.4.0' '/nix/store/ri8fb3kkfh5a5xr8709kybrijq469mrg-streaming-commons-0.2.2.6' '/nix/store/lpqh42khkamrdq7i9cjsgjjsnyaz73gg-zlib-0.6.3.0' '/nix/store/8c7wdx17cb1wfiv8nzn7d6s1wf8g363j-typed-process-0.2.11.1' '/nix/store/4y62zf1l2rv488g1issbsrm94sw2ndz5-crypton-connection-0.3.2' '/nix/store/i82fiac769bh4z9psx4x726fj7h6jr4f-basement-0.0.16' '/nix/store/iz003n3p25p9qjnhsjvbgimnawy58vsz-crypton-x509-1.7.6' '/nix/store/vdb79hhh2bdarlsn2qcp7np6bl10n3jw-asn1-encoding-0.9.6' '/nix/store/cfd21q52d2is032r1ngp8dlfh7nnahc7-asn1-types-0.3.4' '/nix/store/pwl3z99jyg67rlxx2cz0skv88wba8qaj-hourglass-0.2.12' '/nix/store/kc2lfdaj78wrp1hzvviavrp77qqh5dw0-memory-0.18.0' '/nix/store/zbnyy9vlxwl39i97lwgvi7n6n41kcgyx-asn1-parse-0.9.5' '/nix/store/8rzidgxfac519ydvqqjrvrzlzn51xi4j-crypton-0.34' '/nix/store/kfqv74r1w1q7iw4ffp8b2p1l6nl52nwg-pem-0.2.4' '/nix/store/0ab7mbyim53mml9hm2k5j2a4n79q3n6x-crypton-x509-store-1.6.9' '/nix/store/idycwvl638lxlgg94pvg4jmn6d508hx0-crypton-x509-system-1.6.7' '/nix/store/ic6igs9v3dqrvpha0fa7vqr7c8kxqzl4-crypton-x509-validation-1.6.12' '/nix/store/3qd2pxf9rjgf9v8myb1d0y9xh1j9a3is-socks-0.6.1' '/nix/store/6pqqmg3vf3zfizfx5bly3js26sn50xvj-tls-1.8.0' '/nix/store/92xs9bma0vxip5s3mxnv0ga2jv3pbpfd-unix-time-0.4.12' '/nix/store/bsqfb0f5r4w8z4fp3bwg2dhla2523awn-old-time-1.1.0.4' '/nix/store/l7b49w0y8b6bvz283ngs05knhdqxjkgl-foundation-0.0.30' '/nix/store/ik2gk48milr2wrh7pkrr4lysnq5vhwcd-haskell-src-exts-1.23.1' '/nix/store/hmf1zfw463vbkni192664mb137gl4193-http-conduit-2.3.8.3' '/nix/store/cwbwdmx2m0jannny782nmxzw9wizh52q-attoparsec-aeson-2.1.0.0' '/nix/store/q456p3faa5g8wsv16b5cp2q8h4jk3nb9-http-client-0.7.17' '/nix/store/ygs86axj46mhssf1rp5lx9wi7pgfv553-base64-bytestring-1.2.1.0' '/nix/store/glxcr5vhz4kf1vw99wbrrxsqg4w6bal5-cookie-0.4.6' '/nix/store/jhrl35i1kgr7pwqh62dg76ds0xqsd19z-http-types-0.12.4' '/nix/store/4l6azn1mr24g8wd0771k48dl3wy4g6pf-iproute-1.7.12' '/nix/store/3igd3sy42q7jxj81k5x5zpp0xy93ck4w-appar-0.1.8' '/nix/store/7qzc2nida1iw1dhy28pv3ybj1pvsajvj-byteorder-1.0.4' '/nix/store/sb5qjxqs2sf7npmnymy8imn4q47nz021-mime-types-0.1.2.0' '/nix/store/gv2qwynpc3l2rysk2parskj603ikxzq1-network-uri-2.6.4.2' '/nix/store/pv8gai8kgz1ylp1rwxbv5ldyma6j7ghz-http-client-tls-0.3.6.3' '/nix/store/j0zd7y9gc3iy7bq5sx7il5plymrkg73a-js-flot-0.8.3' '/nix/store/83jzx11qvn6pshlba1aazw19gfmmglwn-js-jquery-3.3.1' '/nix/store/90ivcq26brc2c161bvrp944am0jkj58f-mmap-0.5.9' '/nix/store/a2ryhygdd0hxfyf600wrbjf8dmq1cz2v-process-extras-0.7.4' '/nix/store/ajqfpv9v8v88g9vh3bb18sc0xbm26nfk-generic-deriving-1.14.5' '/nix/store/b66q14b0xlgk42hxfpq8cnvirjlzrypr-ListLike-4.7.8.2' '/nix/store/mxl6mrrq5k3lrvfhv7m3zqkzcm9h8ca6-fmlist-0.9.4' '/nix/store/cck3mmv1nwvvrl8iiikvv62hq9qjbs0x-safe-0.3.21' '/nix/store/22007mzhwm1pzypmjh5m9nhfykkqkm4f-storable-tuple-0.1' '/nix/store/ipsbv4lhgc2421zikimsxz40dk4c05k1-storable-record-0.0.7' '/nix/store/0n070vn2v16l5y5c5sv2nd6zgnw6cycd-semigroups-0.20' '/nix/store/lfkz0sczbwmb5n9frahgjwgwwd9bil00-utility-ht-0.0.17.1' '/nix/store/lfkz0sczbwmb5n9frahgjwgwwd9bil00-utility-ht-0.0.17.1' '/nix/store/7x16vqhjk9nw1gcxfhqaadm6987dg195-tar-0.5.1.1' '/nix/store/6nk1m8airq6fn5jwpwjll2nz3pl92zxg-wai-3.2.4' '/nix/store/27j29n1i4zwl50bi3cigf2vlvb1v4a89-vault-0.3.1.5' '/nix/store/4898zi9skalazj9gh71gadj4c89bcdp2-wai-logger-2.4.0' '/nix/store/hfzg1kz0kfi7gb2qbpbmypvgwhsphflb-fast-logger-3.2.2' '/nix/store/ancwbixw6xmm2iz280zw1iiiz08x7q1r-auto-update-0.1.6' '/nix/store/zhx6dcw4n8aqksr4h503hyr0hv1iwvvs-easy-file-0.2.5' '/nix/store/1rrc493lg9sjilwik2lf7hh7vkwg492l-warp-3.3.31' '/nix/store/mbshjvffdvnc9pxys6a4pswg5263rm2y-bsb-http-chunked-0.0.0.4' '/nix/store/j2pjjx1fg1ckys519szffv5k27jsll55-http-date-0.0.11' '/nix/store/p6946rrjr305q59r0brmlj6h9j18j8p9-http2-5.0.1' '/nix/store/ikhab6i0m2zlf6kaq84r5k7fgb2c1ma9-network-byte-order-0.1.7' '/nix/store/rh6rzsnqkvlplj8lzpb38814pcrlk2v7-network-control-0.0.2' '/nix/store/kbg2j3f58sf9an6mysy14iv83iq1310i-psqueues-0.2.8.0' '/nix/store/mbdnrgki9n78qaq5djcr10wmj21sksv9-time-manager-0.0.1' '/nix/store/f0xwvf7hdrq4g1x3pnj7hh4ddxf3iidb-unliftio-0.2.25.0' '/nix/store/f0xwvf7hdrq4g1x3pnj7hh4ddxf3iidb-unliftio-0.2.25.0' '/nix/store/mpcz4v54n72fhxx1pvfmby4hiy73m0mm-recv-0.1.0' '/nix/store/8rzva5wkj3m8k8qq2r8w3qfd06kcsg66-simple-sendfile-0.2.32' '/nix/store/ghx21s729mr95hb0z2c1dzq7s0k8n1zc-word8-0.1.3' '/nix/store/80mzi3dkpnvnw5km42jrakimfjzkzv3p-warp-tls-3.4.5' '/nix/store/rbjj8x8p3s3gn6fl52978w1cjxvxq2z7-tls-session-manager-0.0.4' '/nix/store/bybn3j18c9xn7394m8q37rdq9pv2zxfw-haskell-language-server-2.8.0.0' '/nix/store/7bbdgprdq1zg1bpkbwn1x7xn1324d90p-aeson-pretty-0.8.10' '/nix/store/4pnlwkicg6phlb1qr4r34i60yi83gh2s-apply-refact-0.13.0.0' '/nix/store/fkkj2qfyn3db7ys0hkx56dl095xi3qzl-filemanip-0.3.6.3' '/nix/store/jwviw289hqx1sx9c6hqvw8v62jq7gssc-ghc-9.6.5' '/nix/store/fl8mn38bwr4xc0wfjdpwwv8vf8a4w35z-ghc-exactprint-1.7.1.0' '/nix/store/c7j1dgmngmaicg3v0bsigiz1ki26kjgl-fail-4.9.0.0' '/nix/store/vjzglcy7m0igjs74434dhjmij32hk5x0-free-5.2' '/nix/store/rn7w9qd4k1bli1bsb50kwlvm1f88aa2x-profunctors-5.6.2' '/nix/store/nd7n3inpvjjihkyvgyxkjpbzw8yqrgj3-ordered-containers-0.2.3' '/nix/store/amsdic1pmxw6cc4chkppd6h95ddfj5kb-ghc-paths-0.1.0.12' '/nix/store/l5yqaaf03dzf02qyhnlygh6yv49qc3r1-floskell-0.11.1' '/nix/store/d68kk5kdnirxlsfkmdk7pyc47lawi2y3-monad-dijkstra-0.1.1.5' '/nix/store/rqkj0b533649ybg7xhx5gvmwv76bnwkj-ansi-wl-pprint-1.0.2' '/nix/store/w53ddwph7r9xsk2nyyyqjhs3l8jpky6s-prettyprinter-compat-ansi-wl-pprint-1.0.2' '/nix/store/9z2pycza5v45nv94gh4ixjyq7m7m5bx5-foldl-1.4.16' '/nix/store/8y2bjwy0k0qrxdhygbdrggf7c3i0z8v9-fourmolu-0.14.0.0' '/nix/store/pgqaw39fcmxps66qz7rr071h2k9l2j5g-fuzzy-0.1.1.0' '/nix/store/c62948rgm19k77wl0zjm741p994fhl2h-monoid-subclasses-1.2.5' '/nix/store/b93nql65l85bf4pzmcxdx4fzbps7gznp-commutative-semigroups-0.1.1.0' '/nix/store/gr94v6jylz5b9478fcxrw682gs57vmjw-primes-0.2.1.0' '/nix/store/nx68n7fwxi1by93nhmgzi60kdafrq9b0-ghcide-2.8.0.0' '/nix/store/3iva456xsp82b4hb45514ks6acrj7kvw-base16-bytestring-1.0.2.0' '/nix/store/a8wg6b20jkgrc1vkwhs2anb4x533gjww-co-log-core-0.3.2.1' '/nix/store/1g7mvvrfmgbcqy59msz3xb8m2v0dxzil-cryptohash-sha1-0.11.101.0' '/nix/store/rm7a28c5q0hl2vwn02fss2jbwbml82gg-dependent-map-0.4.0.0' '/nix/store/zy20a2q5vg457q5sxgbz198m73cqbjyf-constraints-extras-0.4.0.0' '/nix/store/73sfgvh4rc61dcp022863q416wrcm2vs-constraints-0.14.2' '/nix/store/d61qj4r03smq3339c6aawxvaxrd4l40l-boring-0.2.1' '/nix/store/w50wk4lb6zdcsxw39kh1y30xqdcmc5pv-dependent-sum-0.7.2.0' '/nix/store/jw1r786dr3fza34k2b3vb910f913n3k0-some-1.0.6' '/nix/store/57iayv5wjdlmw6n91flf8ppjjzrd2dz9-enummapset-0.7.2.0' '/nix/store/l7gaf19qp3v4zinfis5g3cv0yvmxyq3x-fingertree-0.1.5.0' '/nix/store/2acch6myl5cqq0ygjijzd6clafly3257-focus-1.0.3.2' '/nix/store/lby6yj7ab8h613z2vai735mq4wvxf5nq-ghc-check-0.5.0.8' '/nix/store/aqs244saz8mc3ccsjf6qir1z918armwv-ghc-trace-events-0.1.2.8' '/nix/store/xmpy7iak43nkzjy85rycwwis9xrp9dix-Glob-0.10.2' '/nix/store/6lnnsws6qgz0hzax4rpg6xdvdl9gsm8p-haddock-library-1.11.0' '/nix/store/x7ylirvpah99r9zrmhqyjg4li2gr3h1x-hie-bios-0.14.0' '/nix/store/ymwwgsrahv9r41f8wkvs7850a04wnvln-temporary-1.3' '/nix/store/8v3q5m2z3inxc7niqrhmgbvirpqhw48n-hie-compat-0.3.1.2' '/nix/store/3ndi2cllg6c15v54xizkh0irsl25y65f-hiedb-0.6.0.0' '/nix/store/kq4rmwhmx3yprfd559qippkg2p00bvfj-algebraic-graphs-0.7' '/nix/store/30ra86ghz4pbyv5vwfsabh5jh749nssg-lucid-2.11.20230408' '/nix/store/3r1x1riia9ccn7cvjgy5h69ac88prlb6-mmorph-1.2.0' '/nix/store/xn110c6ds3g658dli5rfiblb4203sxmq-sqlite-simple-0.4.19.0' '/nix/store/gi4j5pp279m44634p56ssyklg5x0hgvl-blaze-textual-0.2.3.1' '/nix/store/0wbx9q5hk5c31qx587r17h8ysy4vf793-direct-sqlite-2.3.29' '/nix/store/959jk6frr3x2p9n9yr2yx88zmb5z1dwm-Only-0.1' '/nix/store/r5zhq4zmbaf8yhhbki8bgryi8d86k6gm-hls-graph-2.8.0.0' '/nix/store/745036fmcisxpfpij28hxkg7ic8byk3d-js-dgtable-0.5.2' '/nix/store/3ifw6rrb1fzh282ms12ckxiq5m9lvhar-list-t-1.0.5.7' '/nix/store/mmfb66ndr5jkmvxavwxyf1g1xzcswk83-logict-0.8.1.0' '/nix/store/hzifr6191xpy6k572y0r5jfazhh9k82z-stm-containers-1.2.1' '/nix/store/svjpgfli850k417wzzknd2244j5g8zcd-deferred-folds-0.9.18.6' '/nix/store/is3x1nxs7ygnl5qr4z82wx75jiqapy78-stm-hamt-1.2.1' '/nix/store/iww1943pvfa2lhzpjzp0pvpp43m7xd6h-primitive-extras-0.10.2' '/nix/store/6gpyl2gpzqr6z4cj9211s095wfvar0la-primitive-unlifted-2.1.0.0' '/nix/store/gd4bxzzszk989y02j06iw8wb172m1jpw-hls-plugin-api-2.8.0.0' '/nix/store/g2fbyapvh2l399wqx02aaacv85cbj5sh-hw-fingertree-0.1.2.1' '/nix/store/9ag2wnsrc6q9cf2kzqg2gyzb7jx6slm3-hw-prim-0.6.3.2' '/nix/store/gwqf57f4wihx28wslypa2lvrri1qc0zv-lens-5.2.3' '/nix/store/800njnkh4ncflyhxls3p7zndmlkg41ad-call-stack-0.4.0' '/nix/store/5iwa64lgcr4pmxlk2z1rf3lxb75amgb3-kan-extensions-5.2.6' '/nix/store/zdl187jmaaxisd691ib538f7hkbm81fx-adjunctions-4.4.2' '/nix/store/rcfwq5nzspgbprb8w6djf798yd9ib2hy-void-0.7.3' '/nix/store/0mf8qalisvcv5kdvgq5znbk7afxzhdjk-invariant-0.6.3' '/nix/store/vp7ccrn683dn6k876bqlwxzx9fvsdb1s-parallel-3.2.2.0' '/nix/store/cjjw94016b897ji5g6f255n5jvr0qax5-reflection-2.1.8' '/nix/store/cikxq1pqw1if10g7kj5zw52kghmlf7m8-lens-aeson-1.2.3' '/nix/store/6b5c80hag5hk76c8fiv7hm0yakarbck6-lsp-2.4.0.0' '/nix/store/2fjirq5816hp1p2kmd7fn1wq5xbdwric-lsp-types-2.1.1.0' '/nix/store/9fmb64cxr51fglhxhczm3h6zx6csyzlc-generic-arbitrary-1.0.1' '/nix/store/k9n64gjk5gxd3m1sdygm47w892cvrmrk-mod-0.2.0.1' '/nix/store/4jih2p41zk83jwcw1pgn2gakqfpnv2fb-semirings-0.6' '/nix/store/4swf2spvmapfjk5wvq306my5x979cb8w-quickcheck-instances-0.3.30' '/nix/store/pp2bq889jjs3493v6asidbvapnbhk7c8-row-types-1.0.1.2' '/nix/store/w50dd3bliqcnyf0rxk1kbmqkpa93nl55-generic-lens-2.2.2.0' '/nix/store/cj5v1zc9h9ldmnmix0p0m1qsy469s9z9-generic-lens-core-2.2.1.0' '/nix/store/ai9gp1d7y2w0kkxs05za2b5zkpc1jb2g-indexed-profunctors-0.1.1.1' '/nix/store/dgc539fpxmfzp7dj4rcxapiy1jhd568a-regex-1.1.0.2' '/nix/store/2a6nj8898f7rn0vx358spjyiqwbnr7zk-regex-base-0.94.0.2' '/nix/store/iwcm69fn4kd890hwj244788hv0i2p0dv-regex-pcre-builtin-0.95.2.3.8.44' '/nix/store/21wx5vj2ifn9bd4mz22mzmv2a5xan39c-regex-tdfa-1.3.2.2' '/nix/store/j5rv08h8fsfclck2a35r71pqbwcvh35y-time-locale-compat-0.1.1.5' '/nix/store/3pxmihh4y0c11rpvq7bgjigvxsjf34dx-sorted-list-0.2.2.0' '/nix/store/vji7b58dhyhzppi6zfjhqd6alqykn9i0-text-rope-0.2' '/nix/store/6p4gb3wp009rpnrvj0mcw7ml6ykkywlc-uuid-1.3.15' '/nix/store/029vyhmi4h5l8pif6dfzqy1h8vgpg7fb-cryptohash-md5-0.11.101.0' '/nix/store/ccqrhvmm6sczdh7cy6jddr227a1kvg35-entropy-0.4.1.10' '/nix/store/8zmkfjg755v6ww7dfqc9fij1rrms0pfa-network-info-0.2.1' '/nix/store/i4iirzzhg6ijcpfr0nip11f50d0m1lwl-opentelemetry-0.8.0' '/nix/store/l1xzmzymjbdg92pd34ydghar4wrv14zg-implicit-hie-0.1.4.0' '/nix/store/wzrpcrks9kywvqwy1bhdkgz0r29a8lmz-lsp-test-0.17.0.0' '/nix/store/2wdbzffhq9q3gjq2gjfd43w9hlccszyi-conduit-parse-0.2.1.1' '/nix/store/8dcpb2k8s1h6rqcqz56bk5k9n6bys9qd-parsers-0.12.11' '/nix/store/qghr947xk9r2i2sj9kd58ibgm7h2svgi-charset-0.3.10' '/nix/store/qv57l6w4my4j3jz9vg9ksjaaqb9jvqc7-tasty-hunit-0.10.1' '/nix/store/6vigc9vm1ywhxzmvpr1dvzvf4ycqvd34-tasty-1.4.3' '/nix/store/yn62jl8sfhgxha4g0caq73p6fd5yr11p-gitrev-1.3.1' '/nix/store/bi38kysr6267wfj55c52kikqkrbj3caa-githash-0.1.7.0' '/nix/store/7sgx5r6pgxw9y76g81pcsr6h1chaxvg7-optparse-simple-0.1.1.4' '/nix/store/mckdizfv8cca89yx7ms87v3j34yybsw1-regex-applicative-0.3.4' '/nix/store/x5drlh2pb4gq7ms707fyqlzacqa30v53-filtrable-0.1.6.0' '/nix/store/a2nsqp58arrizhb3dvww5b5cslvxscih-retrie-1.2.3' '/nix/store/9bs5hflh3faaxdmlwx9b1q9hbvbiz4a2-random-shuffle-0.0.4' '/nix/store/2f3dh9f6drcgiqpxj2khnis7hd0x1zg2-MonadRandom-0.6' '/nix/store/z3mg6w2knf12mg4sbn2f8g9xv0k0092l-stan-0.1.2.1' '/nix/store/mi6c68yckd26xq1r27qnhz6h5x2j9mj7-base64-0.4.2.4' '/nix/store/81ycdqskbdj5jbmpwvxr3h3lsb2k0yjg-clay-0.14.0' '/nix/store/sm43nm9nh1nq6nk1iy01cg5pf8x4k1gm-colourista-0.1.0.2' '/nix/store/wjg36557c8hnqa1qrm0j9wq0jl8zi8xk-dir-traverse-0.2.3.0' '/nix/store/y3giq85charpq28fm2rf676g133x0i81-extensions-0.1.0.1' '/nix/store/k515mzfl6r4zmyyqxiv746a0ksbh9kjk-microaeson-0.1.0.1' '/nix/store/xrrcgsvln4b4mk4wi3s9x3lp822gjhhf-pretty-simple-4.1.2.0' '/nix/store/qsix0rsz7r29wl1zdswzmccwwa4qf3w9-relude-1.2.1.0' '/nix/store/hi7gy1nv3kac76m8dkapaffa7w0vz0mv-slist-0.2.1.0' '/nix/store/bb2m2mzabhshsgcdnyfqbryv0pjnfr9k-tomland-1.3.3.2' '/nix/store/7nxsm2qsg82lwysbhrzgkd6yxq62giq1-validation-selective-0.2.0.0' '/nix/store/zqan7pwlrv3d77qdms1m78dwkbhnhw7l-selective-0.7.0.1' '/nix/store/y902nw0ivh98ad558k534418ljjxqd8p-trial-0.0.0.0' '/nix/store/1y04gs0m38xsa0nrl7cxbs1ifxpzrnp7-trial-optparse-applicative-0.0.0.0' '/nix/store/4bflmy3zaxv05y0ia7gmrd5ma86cdpab-trial-tomland-0.0.0.0' '/nix/store/2rk3x3wy67c3d57mj407l9xgl5l9jgb0-stylish-haskell-0.14.5.0' '/nix/store/a1j886bf0f6332qpvrpbmrivmmbdylq0-HsYAML-0.2.1.4' '/nix/store/gszjgf4klykhwfqdinpf9dds2pv9i5qx-HsYAML-aeson-0.2.0.1' '/nix/store/gszjgf4klykhwfqdinpf9dds2pv9i5qx-HsYAML-aeson-0.2.0.1' '/nix/store/82nwa0js65vc7bcs0gb61zmmc9q8zk7x-stack' '/nix/store/pnr0hkdvdjbbzxjgibkrdnip5djq4913-aeson-warning-parser-0.1.1' '/nix/store/icf478bcj4ba175m04xp6bb59jrbbn96-rio-0.1.22.0' '/nix/store/20sqhpipwmygzx3y6jkdmr0yv4g74mjk-microlens-0.4.13.1' '/nix/store/6fa334g00xy6yi5ignmsiq9k6b6yi0p9-microlens-mtl-0.2.0.3' '/nix/store/phzxv3cx1dccvd3lqwnsasi5y9wnx5yd-rio-prettyprint-0.1.8.0' '/nix/store/bibdxr23xdfngckrmylrknmnaxxnwjb4-annotated-wl-pprint-0.7.0' '/nix/store/fxinh1kr2nbkvysxlhkgcqs1ii83pa1v-path-0.9.5' '/nix/store/5fs9cv131llb47s3jsc7lv3l35f7shyd-casa-client-0.0.2' '/nix/store/pcfsircq0vn5hmdxazsvvfakv1cs431s-casa-types-0.0.2' '/nix/store/n2gvjjfsxj81yz89prsga5ccyqc0rh44-path-pieces-0.2.1' '/nix/store/n4qzcbfkx7brzxjpx5c5fp90mlci103h-persistent-2.14.6.1' '/nix/store/s003k7yz4h9ns4adh7dlk1y2iwa4mmz8-http-api-data-0.5.1' '/nix/store/c8q1111srhmyqmmsv35b5pqd9n1lkv54-attoparsec-iso8601-1.1.0.1' '/nix/store/gh25rg8n7qa0scq689qyay53sngj7sib-integer-conversion-0.1.0.1' '/nix/store/qk7f9nyba8hawlx4a5mq46hbx1hr0knm-lift-type-0.1.1.1' '/nix/store/kbja8ys6id7sdixzg0cp91h61r4yqrs2-monad-logger-0.3.40' '/nix/store/c5ik5y3bsmq172y2qawxfbhp9rfm7zki-lifted-base-0.2.3.12' '/nix/store/8hvgimvpnikd2ml12l5kipij40qr84y5-monad-loops-0.4.3' '/nix/store/qg9l4szwv00kwk35a48qjn852qhvdi6p-stm-chans-3.0.0.9' '/nix/store/47wa0npf8d176xn6kfab9sqvmq1psvfx-resource-pool-0.4.0.0' '/nix/store/23ipghhw497mss60gkskrbdd2zxpf3kn-silently-1.2.5.3' '/nix/store/5mw42i44ywp369pscj2f3pi76aslq60q-th-lift-instances-0.1.20' '/nix/store/kj3pjbag76x47ifkd5gj3ick351f9wzl-th-lift-0.8.4' '/nix/store/kj3pjbag76x47ifkd5gj3ick351f9wzl-th-lift-0.8.4' '/nix/store/x41lj51f9h2k24b3gzbh68gwlzgdmxlk-companion-0.1.0' '/nix/store/iaxjrj7p5rqaf72v7pylw0sd51bd8dsx-echo-0.1.4' '/nix/store/7zzzkbj34y7hnrizdydgbgxisrxxi29q-filelock-0.1.1.7' '/nix/store/y181c69rs5aa5sz5ab1bxxkwjsvb1ax2-hi-file-parser-0.1.6.0' '/nix/store/hp55bn734323jdygbmsgj61zywzk70r4-hpack-0.36.0' '/nix/store/p5lymiw0mjnnw2y7xm9s693kl6djl96h-infer-license-0.2.0' '/nix/store/ff1d6pa5gd8d04ph42y2pbjrm9lyj15i-text-metrics-0.3.2' '/nix/store/8k07160zga80wmfhqaa3rv9w1j9bcagv-http-download-0.2.1.0' '/nix/store/ybi7h503rvaa65lixa9kh6zz4mr7ps0i-crypton-conduit-0.2.3' '/nix/store/9ywn8x1hnlkfwvxw9ighxk9g7ns2k420-path-io-1.8.1' '/nix/store/v7xjdf1hwmx16m1qcmhkhziz9wjfrdl2-retry-0.9.3.1' '/nix/store/8f2z91q5f7bsr4nj5vrb4ai0qjbgywqm-mtl-compat-0.2.2' '/nix/store/gaz6a2x92f412y7hqrc07ll169r9pkdf-mustache-2.4.2' '/nix/store/75xvg73jxknjww0v4kifrysws470vf7a-neat-interpolation-0.5.1.4' '/nix/store/zyfdqva7svh1v456kchx16nr2s6v7qfr-open-browser-0.2.1.0' '/nix/store/417xmwl07s7a45s3w4qb97nd55pra610-pantry-0.9.3.2' '/nix/store/z79swrdvwbn15y54zkhw0b5phfbnv5yn-digest-0.0.2.1' '/nix/store/gr29ny0flwc1c7s1kqk2wiil17fbfw2d-hackage-security-0.6.2.4' '/nix/store/w31szzbm2pzhkvcpwxzq40z200wy1ppg-cryptohash-sha256-0.11.102.1' '/nix/store/rn5gdlbwmws5vbanyk4fkh68zzl7a89z-ed25519-0.0.5.0' '/nix/store/a5abb03xzaykni7nniyraiczp61yfxgy-lukko-0.1.1.3' '/nix/store/831yl7qxqgjl5l0vzb3dyvrbiiiqkxkb-persistent-sqlite-2.13.3.0' '/nix/store/ywpvwsr2ikspgd7q5qgi0c8d802vz07p-microlens-th-0.4.3.15' '/nix/store/snjba16kqavlywjrarjqf1iidpbvp01c-persistent-template-2.12.0.0' '/nix/store/ajzq8asivbgpivzgxkca1zj2xw9aa4kh-rio-orphans-0.1.2.0' '/nix/store/65xncygcjhw26dfzy4fx6fcvlkij1dms-static-bytes-0.1.0' '/nix/store/ipglmc3lf0nm80pqqss9khlc5wld44l0-tar-conduit-0.4.1' '/nix/store/wgfln5zz4nh0jkq5mvphcbvqp643rssz-conduit-combinators-1.3.0' '/nix/store/sn88yv1x9ajiya80s1fvgnn5lzwxjd80-zip-archive-0.4.3.2' '/nix/store/qq7mi0mgvh2grd4a8dgfypmp73jx5xw6-project-template-0.2.1.0' '/nix/store/qq7mi0mgvh2grd4a8dgfypmp73jx5xw6-project-template-0.2.1.0' '/nix/store/d9s89ja62dqfswka75rn7minwmn8xi4d-zlib-1.3.1-dev' '/nix/store/p6lh10p1i984zqfacn3kc9pn3nxsj44n-zlib-1.3.1' '/nix/store/pyb7cgxijngc17zcssapxhkwv3jzhwbh-pkg-config-wrapper-0.29.2' '/nix/store/fc9h1nlx3iayfxak8l1v6aiakn1ffnv8-libssh2-1.11.0-dev' '/nix/store/r9dm9dhafnipff77yl4bv1ncjgh4afsi-openssl-3.0.13-dev' '/nix/store/ka3xjddzaplz4j9s8ccdvrrmx060pi06-openssl-3.0.13-bin' '/nix/store/bc10sl6fda9mb598n3gld2fwqr24zq7p-openssl-3.0.13' '/nix/store/n3nwhnbp4mfjxzjgk54z33zz828sn25w-libssh2-1.11.0' '/nix/store/9rgb0lr5i4vbizzhac5b6fk169n8mrkk-apple-framework-CoreFoundation-11.0.0' )
declare -a pkgsTargetTarget=('/nix/store/s83f0jp0fvapgzla0acn4z4vav94jhsb-ncurses-6.4.20221231' '/nix/store/gmsxk2dsyfiwz88qdb1plq5anicq1nzy-libffi-3.4.6' '/nix/store/ym5m1jni1ngbx0vcgjmb1wxb92323ldw-gmp-with-cxx-6.3.0' '/nix/store/0rsh55ighfv3fxidf3xz8vl3abiika0i-libiconv-99' '/nix/store/s83f0jp0fvapgzla0acn4z4vav94jhsb-ncurses-6.4.20221231' )
declare -a postFixupHooks=('_makeSymlinksRelativeInAllOutputs' '_multioutPropagateDev' )
declare -a postUnpackHooks=('_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('_multioutConfig' 'forceLinkCoreFoundationFramework' )
preConfigurePhases=' updateAutotoolsGnuConfigScriptsPhase'
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' )
preferLocalBuild='1'
export preferLocalBuild
prefix='/Users/iggy/projects/hpci/hpci/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
shell='/nix/store/s30jrpgav677fpc9yvkqsib70xfmx7xi-bash-5.2p26/bin/bash'
export shell
shellHook=''
export shellHook
stdenv='/nix/store/ashgigyp2dkvfi1spyl9nsnirvbk67vh-stdenv-darwin'
export stdenv
strictDeps=''
export strictDeps
stripDebugFlags='-S'
system='aarch64-darwin'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
_accumFlagsArray ()
{
 
    local name;
    if [ -n "$__structuredAttrs" ]; then
        for name in "$@";
        do
            local -n nameref="$name";
            flagsArray+=(${nameref+"${nameref[@]}"});
        done;
    else
        for name in "$@";
        do
            local -n nameref="$name";
            case "$name" in 
                *Array)
                    flagsArray+=(${nameref+"${nameref[@]}"})
                ;;
                *)
                    flagsArray+=(${nameref-})
                ;;
            esac;
        done;
    fi
}
_activatePkgs ()
{
 
    local hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( hostOffset <= targetOffset )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
    fi
}
_addToEnv ()
{
 
    local depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( depHostOffset <= depTargetOffset )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in "${pkgsBuildBuild[@]}" "${pkgsBuildHost[@]}" "${pkgsBuildTarget[@]}" "${pkgsHostHost[@]}" "${pkgsHostTarget[@]}" "${pkgsTargetTarget[@]}";
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    export system pname name version;
    for varName in $(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }');
    do
        if (( "${NIX_DEBUG:-0}" >= 1 )); then
            printf "@%s@ -> %q\n" "${varName}" "${!varName}" 1>&2;
        fi;
        args+=("--subst-var" "$varName");
    done
}
_assignFirst ()
{
 
    local varName="$1";
    local _var;
    local REMOVE=REMOVE;
    shift;
    for _var in "$@";
    do
        if [ -n "${!_var-}" ]; then
            eval "${varName}"="${_var}";
            return;
        fi;
    done;
    echo;
    echo "error: _assignFirst: could not find a non-empty variable whose name to assign to ${varName}.";
    echo "       The following variables were all unset or empty:";
    echo "           $*";
    if [ -z "${out:-}" ]; then
        echo '       If you do not want an "out" output in your derivation, make sure to define';
        echo '       the other specific required outputs. This can be achieved by picking one';
        echo "       of the above as an output.";
        echo '       You do not have to remove "out" if you want to have a different default';
        echo '       output, because the first output is taken as a default.';
        echo;
    fi;
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    local destination;
    if [ -d "$fn" ]; then
        destination="$(stripHash "$fn")";
        if [ -e "$destination" ]; then
            echo "Cannot copy $fn to $destination: destination already exists!";
            echo "Did you specify two \"srcs\" with the same \"name\"?";
            return 1;
        fi;
        cp -pr --reflink=auto -- "$fn" "$destination";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                ( XZ_OPT="--threads=$NIX_BUILD_CORES" xz -d < "$fn";
                true ) | tar xf - --mode=+w --warning=no-timestamp
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn" --mode=+w --warning=no-timestamp
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra debugDirs=(stripDebugList stripDebugListTarget);
    local -ra allDirs=(stripAllList stripAllListTarget);
    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);
    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);
    stripDebugList=${stripDebugList[*]:-lib lib32 lib64 libexec bin sbin};
    stripDebugListTarget=${stripDebugListTarget[*]:-};
    stripAllList=${stripAllList[*]:-};
    stripAllListTarget=${stripAllListTarget[*]:-};
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n debugDirList="${debugDirs[$i]}";
        local -n allDirList="${allDirs[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        local -n ranlibCmd="${ranlibCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null 1>&2; then
            continue;
        fi;
        stripDirs "$stripCmd" "$ranlibCmd" "$debugDirList" "${stripDebugFlags[*]:--S -p}";
        stripDirs "$stripCmd" "$ranlibCmd" "$allDirList" "${stripAllFlags[*]:--s -p}";
    done
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ "${dontRewriteSymlinks-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_makeSymlinksRelativeInAllOutputs ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" _makeSymlinksRelative;
    done
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        if [ -z "${forceShare-}" ]; then
            forceShare=(man doc info);
        fi;
    else
        forceShare=(${forceShare:-man doc info});
    fi;
    if [[ -z "$out" ]]; then
        return;
    fi;
    for d in "${forceShare[@]}";
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "${shareDocName:-}" ]; then
        local confScript="${configureScript:-}";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    prependToVar configureFlags --bindir="${!outputBin}"/bin --sbindir="${!outputBin}"/sbin --includedir="${!outputInclude}"/include --oldincludedir="${!outputInclude}"/include --mandir="${!outputMan}"/share/man --infodir="${!outputInfo}"/share/info --docdir="${!outputDoc}"/share/doc/"${shareDocName}" --libdir="${!outputLib}"/lib --libexecdir="${!outputLib}"/libexec --localedir="${!outputLib}"/share/locale;
    prependToVar installFlags pkgconfigdir="${!outputDev}"/lib/pkgconfig m4datadir="${!outputDev}"/share/aclocal aclocaldir="${!outputDev}"/share/aclocal
}
_multioutDevs ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutPropagateDev ()
{
 
    if [ "$(getAllOutputNames)" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $(getAllOutputNames);
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    if [ -f "$pkg" ]; then
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if (( hostOffset <= -1 )); then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        source "$pkg/nix-support/setup-hook";
    fi
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
appendToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if declare -p "$1" 2> /dev/null | grep -q '^'; then
        type="$(declare -p "$1")";
        if [[ "$type" =~ "declare -A" ]]; then
            echo "appendToVar(): ERROR: trying to use appendToVar on an associative array, use variable+=([\"X\"]=\"Y\") instead." 1>&2;
            return 1;
        else
            if [[ "$type" =~ "declare -a" ]]; then
                useArray=true;
            else
                useArray=false;
            fi;
        fi;
    fi;
    shift;
    if $useArray; then
        nameref=(${nameref+"${nameref[@]}"} "$@");
    else
        nameref="${nameref-} $*";
    fi
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "checking for references to $TMPDIR/ in $dir...";
    local i;
    find "$dir" -type f -print0 | while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done
}
bintoolsWrapper_addLDVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ -d "$1/lib64" && ! -L "$1/lib64" ]]; then
        export NIX_LDFLAGS${role_post}+=" -L$1/lib64";
    fi;
    if [[ -d "$1/lib" ]]; then
        local -a glob=($1/lib/lib*);
        if [ "${#glob[*]}" -gt 0 ]; then
            export NIX_LDFLAGS${role_post}+=" -L$1/lib";
        fi;
    fi
}
buildPhase ()
{
 
    runHook preBuild;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom buildPhase, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
        _accumFlagsArray makeFlags makeFlagsArray buildFlags buildFlagsArray;
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
ccWrapper_addCVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [ -d "$1/include" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -isystem $1/include";
    fi;
    if [ -d "$1/Library/Frameworks" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -iframework $1/Library/Frameworks";
    fi
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget=check;
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget=test;
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
        _accumFlagsArray makeFlags makeFlagsArray;
        if [ -n "$__structuredAttrs" ]; then
            flagsArray+=("${checkFlags[@]:-VERBOSE=y}");
        else
            flagsArray+=(${checkFlags:-VERBOSE=y});
        fi;
        _accumFlagsArray checkFlagsArray;
        flagsArray+=(${checkTarget});
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : "${configureScript=}";
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        export lt_cv_deplibs_check_method="${lt_cv_deplibs_check_method-pass_all}";
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);
        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \; -exec touch -r {} "$CONFIGURE_MTIME_REFERENCE" \; -exec sed -i s_/usr/bin/file_file_g {} \; -exec touch -r "$CONFIGURE_MTIME_REFERENCE" {} \;;
        rm -f "$CONFIGURE_MTIME_REFERENCE";
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        prependToVar configureFlags "${prefixKey:---prefix=}$prefix";
    fi;
    if [[ -f "$configureScript" ]]; then
        if [ -z "${dontAddDisableDepTrack:-}" ]; then
            if grep -q dependency-tracking "$configureScript"; then
                prependToVar configureFlags --disable-dependency-tracking;
            fi;
        fi;
        if [ -z "${dontDisableStatic:-}" ]; then
            if grep -q enable-static "$configureScript"; then
                prependToVar configureFlags --disable-static;
            fi;
        fi;
        if [ -z "${dontPatchShebangsInConfigure:-}" ]; then
            patchShebangs --build "$configureScript";
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local -a flagsArray;
        _accumFlagsArray configureFlags configureFlagsArray;
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -d '' "$1"; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=();
    _accumFlagsArray distFlags distFlagsArray;
    flagsArray+=(${distTarget:-dist});
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs[*]:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars" || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        read -r -d '' -a buildTimes < <(times);
        echo "build times:";
        echo "user time for the shell             ${buildTimes[0]}";
        echo "system time for the shell           ${buildTimes[1]}";
        echo "user time for all child processes   ${buildTimes[2]}";
        echo "system time for all child processes ${buildTimes[3]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            exit 0;
        fi;
    else
        runHook exitHook;
    fi;
    return "$exitCode"
}
findInputs ()
{
 
    local -r pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    local varVar="${pkgAccumVarVars[hostOffset + 1]}";
    local varRef="$varVar[$((targetOffset - hostOffset))]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case "${!varSlice-}" in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    function mapOffset () 
    { 
        local -r inputOffset="$1";
        local -n outputOffset="$2";
        if (( inputOffset <= 0 )); then
            outputOffset=$((inputOffset + hostOffset));
        else
            outputOffset=$((inputOffset - 1 + targetOffset));
        fi
    };
    local relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[relHostOffset + 1]}";
        local hostOffsetNext;
        mapOffset "$relHostOffset" hostOffsetNext;
        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
        local relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            local targetOffsetNext;
            mapOffset "$relTargetOffset" targetOffsetNext;
            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
fixLibtool ()
{
 
    local search_path;
    for flag in $NIX_LDFLAGS;
    do
        case $flag in 
            -L*)
                search_path+=" ${flag#-L}"
            ;;
        esac;
    done;
    sed -i "$1" -e "s^eval \(sys_lib_search_path=\).*^\1'${search_path:-}'^" -e 's^eval sys_lib_.+search_path=.*^^'
}
fixupPhase ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w,u-s,g-s "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    recordPropagatedDependencies;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in ${setupHooks[@]};
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords $propagatedUserEnvPkgs > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
forceLinkCoreFoundationFramework ()
{
 
    NIX_CFLAGS_COMPILE="-F/nix/store/3vmj2nyi80kis2dgw7ik78ym569my0wp-apple-framework-CoreFoundation-11.0.0/Library/Frameworks${NIX_CFLAGS_COMPILE:+ }${NIX_CFLAGS_COMPILE-}";
    NIX_LDFLAGS+=" /nix/store/3vmj2nyi80kis2dgw7ik78ym569my0wp-apple-framework-CoreFoundation-11.0.0/Library/Frameworks/CoreFoundation.framework/CoreFoundation.tbd"
}
genericBuild ()
{
 
    export GZIP_NO_TIMESTAMPS=1;
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases[*]:-}" ]; then
        phases="${prePhases[*]:-} unpackPhase patchPhase ${preConfigurePhases[*]:-}             configurePhase ${preBuildPhases[*]:-} buildPhase checkPhase             ${preInstallPhases[*]:-} installPhase ${preFixupPhases[*]:-} fixupPhase installCheckPhase             ${preDistPhases[*]:-} distPhase ${postPhases[*]:-}";
    fi;
    for curPhase in ${phases[*]};
    do
        runPhase "$curPhase";
    done
}
getAllOutputNames ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        echo "${!outputs[*]}";
    else
        echo "$outputs";
    fi
}
getHostRole ()
{
 
    getRole "$hostOffset"
}
getHostRoleEnvHook ()
{
 
    getRole "$depHostOffset"
}
getRole ()
{
 
    case $1 in 
        -1)
            role_post='_FOR_BUILD'
        ;;
        0)
            role_post=''
        ;;
        1)
            role_post='_FOR_TARGET'
        ;;
        *)
            echo "pkg-config-wrapper-0.29.2: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
getTargetRole ()
{
 
    getRole "$targetOffset"
}
getTargetRoleEnvHook ()
{
 
    getRole "$depTargetOffset"
}
getTargetRoleWrapper ()
{
 
    case $targetOffset in 
        -1)
            export NIX_PKG_CONFIG_WRAPPER_TARGET_BUILD_aarch64_apple_darwin=1
        ;;
        0)
            export NIX_PKG_CONFIG_WRAPPER_TARGET_HOST_aarch64_apple_darwin=1
        ;;
        1)
            export NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_aarch64_apple_darwin=1
        ;;
        *)
            echo "pkg-config-wrapper-0.29.2: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} "${installCheckTarget:-installcheck}" > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
            _accumFlagsArray makeFlags makeFlagsArray installCheckFlags installCheckFlagsArray;
            flagsArray+=(${installCheckTarget:-installcheck});
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom installPhase, doing nothing";
        runHook postInstall;
        return;
    else
        foundMakefile=1;
    fi;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(${enableParallelInstalling:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
    _accumFlagsArray makeFlags makeFlagsArray installFlags installFlagsArray;
    if [ -n "$__structuredAttrs" ]; then
        flagsArray+=("${installTargets[@]:-install}");
    else
        flagsArray+=(${installTargets:-install});
    fi;
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isMachO ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xcf") || "$magic" = $(echo -ne "\xcf\xfa\xed\xfe") ]]; then
        return 0;
    else
        if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xce") || "$magic" = $(echo -ne "\xce\xfa\xed\xfe") ]]; then
            return 0;
        else
            if [[ "$magic" = $(echo -ne "\xca\xfe\xba\xbe") || "$magic" = $(echo -ne "\xbe\xba\xfe\xca") ]]; then
                return 0;
            else
                return 1;
            fi;
        fi;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
mapOffset ()
{
 
    local -r inputOffset="$1";
    local -n outputOffset="$2";
    if (( inputOffset <= 0 )); then
        outputOffset=$((inputOffset + hostOffset));
    else
        outputOffset=$((inputOffset - 1 + targetOffset));
    fi
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $(getAllOutputNames);
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if [ -n "$(find "$srcParent" -maxdepth 0 -type d -empty 2> /dev/null)" ]; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$srcParent" 2> /dev/null || true;
            fi;
        done;
    done
}
patchPhase ()
{
 
    runHook prePatch;
    local -a patchesArray;
    if [ -n "$__structuredAttrs" ]; then
        patchesArray=(${patches:+"${patches[@]}"});
    else
        patchesArray=(${patches:-});
    fi;
    for i in "${patchesArray[@]}";
    do
        echo "applying patch $i";
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        local -a flagsArray;
        if [ -n "$__structuredAttrs" ]; then
            flagsArray=("${patchFlags[@]:--p1}");
        else
            flagsArray=(${patchFlags:--p1});
        fi;
        $uncompress < "$i" 2>&1 | patch "${flagsArray[@]}";
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    local update;
    while [[ $# -gt 0 ]]; do
        case "$1" in 
            --host)
                pathName=HOST_PATH;
                shift
            ;;
            --build)
                pathName=PATH;
                shift
            ;;
            --update)
                update=true;
                shift
            ;;
            --)
                shift;
                break
            ;;
            -* | --*)
                echo "Unknown option $1 supplied to patchShebangs" 1>&2;
                return 1
            ;;
            *)
                break
            ;;
        esac;
    done;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f" || [ "$oldInterpreterLine" ];
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "${pathName:-}" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-S" ]]; then
                arg0=${args%% *};
                args=${args#* };
                newPath="$(PATH="${!pathName}" command -v "env" || true)";
                args="-S $(PATH="${!pathName}" command -v "$arg0" || true) $args";
            else
                if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                    echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                    exit 1;
                else
                    newPath="$(PATH="${!pathName}" command -v "$arg0" || true)";
                fi;
            fi;
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" command -v "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && ( "$update" == true || "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ) ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0)
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
pkgConfigWrapper_addPkgConfigPath ()
{
 
    local role_post;
    getHostRoleEnvHook;
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/lib/pkgconfig";
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/share/pkgconfig"
}
prependToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if declare -p "$1" 2> /dev/null | grep -q '^'; then
        type="$(declare -p "$1")";
        if [[ "$type" =~ "declare -A" ]]; then
            echo "prependToVar(): ERROR: trying to use prependToVar on an associative array." 1>&2;
            return 1;
        else
            if [[ "$type" =~ "declare -a" ]]; then
                useArray=true;
            else
                useArray=false;
            fi;
        fi;
    fi;
    shift;
    if $useArray; then
        nameref=("$@" ${nameref+"${nameref[@]}"});
    else
        nameref="$* ${nameref-}";
    fi
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
recordPropagatedDependencies ()
{
 
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
runPhase ()
{
 
    local curPhase="$*";
    if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
        return;
    fi;
    if [[ -n $NIX_LOG_FD ]]; then
        echo "@nix { \"action\": \"setPhase\", \"phase\": \"$curPhase\" }" >&"$NIX_LOG_FD";
    fi;
    showPhaseHeader "$curPhase";
    dumpVars;
    local startTime=$(date +"%s");
    eval "${!curPhase:-$curPhase}";
    local endTime=$(date +"%s");
    showPhaseFooter "$curPhase" "$startTime" "$endTime";
    if [ "$curPhase" = unpackPhase ]; then
        [ -n "${sourceRoot:-}" ] && chmod +x "${sourceRoot}";
        cd "${sourceRoot:-.}";
    fi
}
sdkRootHook ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ ! $NIX_CFLAGS_COMPILE =~ isysroot ]]; then
        export NIX_CFLAGS_COMPILE${role_post}+=' -isysroot /nix/store/7n8zp0cpbnf1rf7d3dc7gi0x43iadqn3-sdkroot-11.0/MacOSX11.0.sdk';
    fi
}
showPhaseFooter ()
{
 
    local phase="$1";
    local startTime="$2";
    local endTime="$3";
    local delta=$(( endTime - startTime ));
    (( delta < 30 )) && return;
    local H=$((delta/3600));
    local M=$((delta%3600/60));
    local S=$((delta%60));
    echo -n "$phase completed in ";
    (( H > 0 )) && echo -n "$H hours ";
    (( M > 0 )) && echo -n "$M minutes ";
    echo "$S seconds"
}
showPhaseHeader ()
{
 
    local phase="$1";
    echo "Running phase: $phase"
}
stripDirs ()
{
 
    local cmd="$1";
    local ranlibCmd="$2";
    local paths="$3";
    local stripFlags="$4";
    local excludeFlags=();
    local pathsNew=;
    [ -z "$cmd" ] && echo "stripDirs: Strip command is empty" 1>&2 && exit 1;
    [ -z "$ranlibCmd" ] && echo "stripDirs: Ranlib command is empty" 1>&2 && exit 1;
    local pattern;
    if [ -n "${stripExclude:-}" ]; then
        for pattern in "${stripExclude[@]}";
        do
            excludeFlags+=(-a '!' '(' -name "$pattern" -o -wholename "$prefix/$pattern" ')');
        done;
    fi;
    local p;
    for p in ${paths};
    do
        if [ -e "$prefix/$p" ]; then
            pathsNew="${pathsNew} $prefix/$p";
        fi;
    done;
    paths=${pathsNew};
    if [ -n "${paths}" ]; then
        echo "stripping (with command $cmd and flags $stripFlags) in $paths";
        local striperr;
        striperr="$(mktemp --tmpdir="$TMPDIR" 'striperr.XXXXXX')";
        find $paths -type f "${excludeFlags[@]}" -a '!' -path "$prefix/lib/debug/*" -printf '%D-%i,%p\0' | sort -t, -k1,1 -u -z | cut -d, -f2- -z | xargs -r -0 -n1 -P "$NIX_BUILD_CORES" -- $cmd $stripFlags 2> "$striperr" || exit_code=$?;
        [[ "$exit_code" = 123 || -z "$exit_code" ]] || ( cat "$striperr" 1>&2 && exit 1 );
        rm "$striperr";
        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \; 2> /dev/null;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local -a fileNames=();
    for arg in "$@";
    do
        if [[ "$arg" = "--"* ]]; then
            break;
        fi;
        fileNames+=("$arg");
        shift;
    done;
    for file in "${fileNames[@]}";
    do
        substitute "$file" "$file" "$@";
    done
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        local replace_mode="$1";
        case "$1" in 
            --replace)
                if ! "$_substituteStream_has_warned_replace_deprecation"; then
                    echo "substituteStream(): WARNING: '--replace' is deprecated, use --replace-{fail,warn,quiet}. ($description)" 1>&2;
                    _substituteStream_has_warned_replace_deprecation=true;
                fi;
                replace_mode='--replace-warn'
            ;&
            --replace-quiet | --replace-warn | --replace-fail)
                pattern="$2";
                replacement="$3";
                shift 3;
                local savedvar;
                savedvar="${!var}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                if [ "$pattern" != "$replacement" ]; then
                    if [ "${!var}" == "$savedvar" ]; then
                        if [ "$replace_mode" == --replace-warn ]; then
                            printf "substituteStream(): WARNING: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                        else
                            if [ "$replace_mode" == --replace-fail ]; then
                                printf "substituteStream(): ERROR: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                                return 1;
                            fi;
                        fi;
                    fi;
                fi
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream(): ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream(): ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream(): ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
unpackFile ()
{
 
    curSrc="$1";
    echo "unpacking source archive $curSrc";
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local -a srcsArray;
    if [ -n "$__structuredAttrs" ]; then
        srcsArray=("${srcs[@]}");
    else
        srcsArray=($srcs);
    fi;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in "${srcsArray[@]}";
    do
        unpackFile "$i";
    done;
    : "${sourceRoot=}";
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
updateAutotoolsGnuConfigScriptsPhase ()
{
 
    if [ -n "${dontUpdateAutotoolsGnuConfigScripts-}" ]; then
        return;
    fi;
    for script in config.sub config.guess;
    do
        for f in $(find . -type f -name "$script");
        do
            echo "Updating Autotools / GNU config script to a newer upstream version: $f";
            cp -f "/nix/store/2q8m3bbrdl6xv16dgckb6pvzrl93x8nd-gnu-config-2024-01-01/$script" "$f";
        done;
    done
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ %p\0' | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "$shellHook"
